{"version":3,"sources":["app/app.module.js","app/services/user/user.service.js","app/services/profiles/profile.service.js","app/services/profiles/page-ribbon.directive.js","app/services/auth/register.service.js","app/services/auth/principal.service.js","app/services/auth/password-reset-init.service.js","app/services/auth/password-reset-finish.service.js","app/services/auth/password.service.js","app/services/auth/has-authority.directive.js","app/services/auth/has-any-authority.directive.js","app/services/auth/auth.service.js","app/services/auth/auth.jwt.service.js","app/services/auth/activate.service.js","app/services/auth/account.service.js","app/layouts/navbar/navbar.controller.js","app/layouts/navbar/active-menu.directive.js","app/layouts/error/error.state.js","app/home/home.state.js","app/home/home.controller.js","app/entities/entity.state.js","app/components/util/truncate-words.filter.js","app/components/util/truncate-characters.filter.js","app/components/util/sort-by.directive.js","app/components/util/sort.directive.js","app/components/util/parse-links.service.js","app/components/util/pagination-util.service.js","app/components/util/jhi-item-count.directive.js","app/components/util/date-util.service.js","app/components/util/data-util.service.js","app/components/util/capitalize.filter.js","app/components/util/base64.service.js","app/components/login/login.service.js","app/components/login/login.controller.js","app/components/language/language.service.js","app/components/language/language.filter.js","app/components/language/language.controller.js","app/components/language/language.constants.js","app/components/form/show-validation.directive.js","app/components/form/pagination.constants.js","app/components/form/minbytes.directive.js","app/components/form/maxbytes.directive.js","app/components/alert/alert-error.directive.js","app/components/alert/alert.service.js","app/components/alert/alert.directive.js","app/blocks/interceptor/notification.interceptor.js","app/blocks/interceptor/errorhandler.interceptor.js","app/blocks/interceptor/auth-expired.interceptor.js","app/blocks/interceptor/auth.interceptor.js","app/blocks/handlers/translation.handler.js","app/blocks/handlers/state.handler.js","app/blocks/config/uib-pagination.config.js","app/blocks/config/uib-pager.config.js","app/blocks/config/translation-storage.provider.js","app/blocks/config/translation.config.js","app/blocks/config/localstorage.config.js","app/blocks/config/http.config.js","app/blocks/config/compile.config.js","app/blocks/config/alert.config.js","app/app.state.js","app/app.constants.js","app/admin/user-management/user-management-dialog.controller.js","app/admin/user-management/user-management-detail.controller.js","app/admin/user-management/user-management-delete-dialog.controller.js","app/admin/user-management/user-management.state.js","app/admin/user-management/user-management.controller.js","app/admin/metrics/metrics.state.js","app/admin/metrics/metrics.service.js","app/admin/metrics/metrics.modal.controller.js","app/admin/metrics/metrics.controller.js","app/admin/logs/logs.state.js","app/admin/logs/logs.service.js","app/admin/logs/logs.controller.js","app/admin/health/health.state.js","app/admin/health/health.service.js","app/admin/health/health.modal.controller.js","app/admin/health/health.controller.js","app/admin/docs/docs.state.js","app/admin/configuration/configuration.state.js","app/admin/configuration/configuration.service.js","app/admin/configuration/configuration.controller.js","app/admin/audits/audits.state.js","app/admin/audits/audits.service.js","app/admin/audits/audits.controller.js","app/admin/admin.state.js","app/account/settings/settings.state.js","app/account/settings/settings.controller.js","app/account/reset/request/reset.request.state.js","app/account/reset/request/reset.request.controller.js","app/account/reset/finish/reset.finish.state.js","app/account/reset/finish/reset.finish.controller.js","app/account/register/register.state.js","app/account/register/register.controller.js","app/account/password/password-strength-bar.directive.js","app/account/password/password.state.js","app/account/password/password.controller.js","app/account/activate/activate.state.js","app/account/activate/activate.controller.js","app/account/account.state.js","app/app.js"],"names":["run","stateHandler","translationHandler","initialize","angular","module","$inject","User","$resource","service","query","method","isArray","get","transformResponse","data","fromJson","save","update","delete","factory","ProfileService","$http","getProfileInfo","isUndefined","dataPromise","then","result","activeProfiles","response","ribbonEnv","inProduction","indexOf","swaggerEnabled","pageRibbon","$rootScope","$translate","linkFunc","scope","element","attrs","addClass","removeClass","directive","replace","restrict","template","link","Register","Principal","$q","Account","authenticate","identity","_identity","_authenticated","hasAnyAuthority","authorities","i","length","hasAuthority","authority","this","_id","when","force","getAccountThen","account","deferred","resolve","getAccountCatch","defer","undefined","isDefined","promise","$promise","catch","isAuthenticated","isIdentityResolved","PasswordResetInit","PasswordResetFinish","Password","setVisible","setHidden","defineVisibility","reset","$watch","split","Auth","$state","$sessionStorage","AuthServerProvider","LoginService","Activate","activateAccount","key","callback","cb","noop","err","bind","authorize","authThen","toState","parent","name","go","fromState","getPreviousState","previousState","resetPreviousState","params","storePreviousState","toStateParams","open","authReturn","changePassword","newPassword","createAccount","logout","login","credentials","loginThen","use","langKey","refresh","reject","loginWithToken","jwt","rememberMe","resetPasswordFinish","keyAndPassword","resetPasswordInit","mail","updateAccount","previousStateName","previousStateParams","$localStorage","getToken","authenticationToken","authenticateSuccess","status","headers","bearerToken","slice","storeAuthenticationToken","username","password","post","success","interceptor","NavbarController","collapseNavbar","toggleNavbar","vm","isNavbarCollapsed","controller","activeMenu","$locale","tmhDynamicLocale","language","selectedLanguage","set","stateConfig","$stateProvider","state","url","pageTitle","views","content@","templateUrl","translatePartialLoader","$translatePartialLoader","addPart","config","controllerAs","HomeController","$scope","getAccount","register","$on","abstract","words","wordsFilter","input","isNaN","inputWords","join","filter","characters","charactersFilter","chars","breakOnWord","substring","charAt","substr","lastspace","lastIndexOf","jhSortBy","parentCtrl","sort","require","jhSort","predicate","ascending","SortController","bindToController","$element","applyClass","thisIcon","find","sortIcon","sortAsc","sortDesc","remove","add","resetClasses","allThIcons","field","$apply","triggerApply","values","$watchGroup","ParseLinks","parse","header","Error","parts","links","forEach","p","section","trim","queryString","RegExp","$0","$1","$2","$3","page","isString","parseInt","PaginationUtil","parseAscending","sortArray","parsePage","parsePredicate","pop","jhiItemCount","bindings","queryCount","itemsPerPage","component","DateUtils","$filter","convertDateTimeFromServer","date","Date","convertLocalDateFromServer","dateString","convertLocalDateToServer","dateformat","DataUtils","$window","abbreviate","text","byteSize","base64String","endsWith","suffix","str","paddingSize","size","formatAsBytes","toString","openFile","type","toBase64","file","fileReader","FileReader","readAsDataURL","onload","e","base64Data","target","capitalize","capitalizeFilter","toLowerCase","toUpperCase","Base64","encode","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","keyStr","decode","String","fromCharCode","$uibModal","modalInstance","animation","resetModal","LoginController","$timeout","$uibModalInstance","cancel","authenticationError","dismiss","event","preventDefault","close","current","$broadcast","requestResetPassword","focus","JhiLanguageService","LANGUAGES","getAll","getCurrent","storage","findLanguageFromKey","findLanguageFromKeyFilter","lang","ca","cs","da","de","el","en","es","et","fr","gl","hu","hi","hy","it","ja","ko","mr","nl","pl","pt-br","pt-pt","ro","ru","sk","sr","sv","ta","th","tr","vi","zh-cn","zh-tw","JhiLanguageController","changeLanguage","languageKey","languages","constant","showValidation","formCtrl","each","$formGroup","$inputs","$input","inputName","attr","$invalid","$dirty","isInvalid","toggleClass","minbytes","ngModel","$validators","modelValue","$isEmpty","numberOfBytes","maxbytes","jhiAlertErrorController","AlertService","addErrorAlert","message","alerts","push","msg","timeout","toast","isToast","scoped","cleanHttpErrorListener","httpResponse","stopPropagation","Object","keys","errorHeader","entityKey","entityName","instant","fieldErrors","fieldError","convertedField","fieldName","objectName","toJson","jhiAlertError","getService","$sce","clear","position","error","warning","info","alertOptions","alert","trustAsHtml","id","alertId","closeAlert","addAlert","extAlerts","that","thisAlerts","closeAlertByIndex","map","index","splice","$get","showAsToast","provider","jhiAlertController","jhiAlert","notificationInterceptor","alertKey","param","errorHandlerInterceptor","responseError","path","$emit","authExpiredInterceptor","$injector","authInterceptor","$location","request","token","Authorization","translateChangeSuccess","updateTitle","titleKey","$current","title","document","VERSION","stateChangeStart","external","stateChangeSuccess","toParams","fromParams","paginationConfig","uibPaginationConfig","paginationConstants","maxSize","boundaryLinks","firstText","previousText","nextText","lastText","pagerConfig","uibPagerConfig","translationStorageProvider","$cookies","$log","getObject","putObject","put","value","translationConfig","$translateProvider","tmhDynamicLocaleProvider","useLoader","urlTemplate","preferredLanguage","useStorage","useSanitizeValueStrategy","addInterpolation","localeLocationPattern","useCookieStorage","storageKey","localStorageConfig","$localStorageProvider","$sessionStorageProvider","setKeyPrefix","httpConfig","$urlRouterProvider","$httpProvider","httpRequestInterceptorCacheBusterProvider","$urlMatcherFactoryProvider","setMatchlist","otherwise","interceptors","val","equals","a","b","is","pattern","compileServiceConfig","$compileProvider","DEBUG_INFO_ENABLED","debugInfoEnabled","alertServiceConfig","AlertServiceProvider","navbar@","UserManagementDialogController","$stateParams","entity","onSaveSuccess","isSaving","onSaveError","user","UserManagementDetailController","load","UserManagementDeleteController","confirmDelete","squash","pagingParams","onEnter","backdrop","firstName","lastName","email","activated","createdBy","createdDate","lastModifiedBy","lastModifiedDate","resetDate","resetKey","reload","UserManagementController","setActive","isActivated","loadAll","onSuccess","onError","totalItems","users","reverse","loadPage","transition","transitionTo","search","currentSearch","currentAccount","JhiMetricsService","getMetrics","threadDump","JhiMetricsMonitoringModalController","getLabelClass","threadState","threadDumpAll","threadDumpBlocked","threadDumpRunnable","threadDumpTimedWaiting","threadDumpWaiting","JhiMetricsMonitoringController","updatingMetrics","metrics","refreshThreadDumpData","cachesStats","servicesStats","newValue","timers","gauges","newKey","LogsService","findAll","changeLevel","LogsController","level","loggers","JhiHealthService","checkHealth","transformHealthData","flattenHealthData","getBaseName","getSubSystemName","remainder","isHealthObject","hasSubSystem","addHealthObject","getModuleName","isLeaf","healthObject","healthData","details","hasDetails","extend","separator","HealthModalController","currentHealth","baseName","subSystemName","JhiHealthCheckController","statusState","updatingHealth","showHealth","health","JhiConfigurationService","getConfigPropsComplete","properties","orderBy","getEnv","getEnvComplete","vals","v","k","JhiConfigurationController","allConfiguration","configuration","AuditsService","fromDate","toDate","AuditsController","onChangeDate","dateFormat","audits","today","getFullYear","getMonth","getDate","previousMonth","SettingsController","settingsAccount","copyAccount","RequestResetController","requestReset","errorEmailNotExists","resetAccount","ResetFinishController","finishReset","doNotMatch","confirmPassword","keyMissing","RegisterController","registerAccount","errorUserExists","errorEmailExists","passwordStrengthBar","iElement","strength","colors","mesureStrength","_force","_regex","_lowerLetters","test","_upperLetters","_numbers","_symbols","_flags","_passedMatches","$","grep","Math","min","getColor","s","idx","col","c","children","css","background-color","passwordToCheck","PasswordController","ActivationController","$templateCache"],"mappings":"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","file":"app/app-4f7cff0913.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp', [\n            'ngStorage',\n            'tmh.dynamicLocale',\n            'pascalprecht.translate',\n            'ngResource',\n            'ngCookies',\n            'ngAria',\n            'ngCacheBuster',\n            'ngFileUpload',\n            'ui.bootstrap',\n            'ui.bootstrap.datetimepicker',\n            'ui.router',\n            'infinite-scroll',\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\n            'angular-loading-bar'\n        ])\n        .run(run);\n\n    run.$inject = ['stateHandler', 'translationHandler'];\n\n    function run(stateHandler, translationHandler) {\n        stateHandler.initialize();\n        translationHandler.initialize();\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('User', User);\n\n    User.$inject = ['$resource'];\n\n    function User ($resource) {\n        var service = $resource('api/users/:login', {}, {\n            'query': {method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    data = angular.fromJson(data);\n                    return data;\n                }\n            },\n            'save': { method:'POST' },\n            'update': { method:'PUT' },\n            'delete':{ method:'DELETE'}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('ProfileService', ProfileService);\n\n    ProfileService.$inject = ['$http'];\n\n    function ProfileService($http) {\n\n        var dataPromise;\n\n        var service = {\n            getProfileInfo : getProfileInfo\n        };\n\n        return service;\n\n        function getProfileInfo() {\n            if (angular.isUndefined(dataPromise)) {\n                dataPromise = $http.get('api/profile-info').then(function(result) {\n                    if (result.data.activeProfiles) {\n                        var response = {};\n                        response.activeProfiles = result.data.activeProfiles;\n                        response.ribbonEnv = result.data.ribbonEnv;\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\n                        return response;\n                    }\n                });\n            }\n            return dataPromise;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('pageRibbon', pageRibbon);\n\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\n\n    function pageRibbon(ProfileService, $rootScope, $translate) {\n        var directive = {\n            replace : true,\n            restrict : 'AE',\n            template : '<div class=\"ribbon hidden\"><a href=\"\" data-translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\n            link : linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            ProfileService.getProfileInfo().then(function(response) {\n                if (response.ribbonEnv) {\n                    scope.ribbonEnv = response.ribbonEnv;\n                    element.addClass(response.ribbonEnv);\n                    element.removeClass('hidden');\n                }\n            });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Register', Register);\n\n    Register.$inject = ['$resource'];\n\n    function Register ($resource) {\n        return $resource('api/register', {}, {});\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Principal', Principal);\n\n    Principal.$inject = ['$q', 'Account'];\n\n    function Principal ($q, Account) {\n        var _identity,\n            _authenticated = false;\n\n        var service = {\n            authenticate: authenticate,\n            hasAnyAuthority: hasAnyAuthority,\n            hasAuthority: hasAuthority,\n            identity: identity,\n            isAuthenticated: isAuthenticated,\n            isIdentityResolved: isIdentityResolved\n        };\n\n        return service;\n\n        function authenticate (identity) {\n            _identity = identity;\n            _authenticated = identity !== null;\n        }\n\n        function hasAnyAuthority (authorities) {\n            if (!_authenticated || !_identity || !_identity.authorities) {\n                return false;\n            }\n\n            for (var i = 0; i < authorities.length; i++) {\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function hasAuthority (authority) {\n            if (!_authenticated) {\n                return $q.when(false);\n            }\n\n            return this.identity().then(function(_id) {\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\n            }, function(){\n                return false;\n            });\n        }\n\n        function identity (force) {\n            var deferred = $q.defer();\n\n            if (force === true) {\n                _identity = undefined;\n            }\n\n            // check and see if we have retrieved the identity data from the server.\n            // if we have, reuse it by immediately resolving\n            if (angular.isDefined(_identity)) {\n                deferred.resolve(_identity);\n\n                return deferred.promise;\n            }\n\n            // retrieve the identity data from the server, update the identity object, and then resolve.\n            Account.get().$promise\n                .then(getAccountThen)\n                .catch(getAccountCatch);\n\n            return deferred.promise;\n\n            function getAccountThen (account) {\n                _identity = account.data;\n                _authenticated = true;\n                deferred.resolve(_identity);\n            }\n\n            function getAccountCatch () {\n                _identity = null;\n                _authenticated = false;\n                deferred.resolve(_identity);\n            }\n        }\n\n        function isAuthenticated () {\n            return _authenticated;\n        }\n\n        function isIdentityResolved () {\n            return angular.isDefined(_identity);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('PasswordResetInit', PasswordResetInit);\n\n    PasswordResetInit.$inject = ['$resource'];\n\n    function PasswordResetInit($resource) {\n        var service = $resource('api/account/reset_password/init', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('PasswordResetFinish', PasswordResetFinish);\n\n    PasswordResetFinish.$inject = ['$resource'];\n\n    function PasswordResetFinish($resource) {\n        var service = $resource('api/account/reset_password/finish', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Password', Password);\n\n    Password.$inject = ['$resource'];\n\n    function Password($resource) {\n        var service = $resource('api/account/change_password', {}, {});\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('hasAuthority', hasAuthority);\n\n    hasAuthority.$inject = ['Principal'];\n\n    function hasAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    Principal.hasAuthority(authority)\n                        .then(function (result) {\n                            if (result) {\n                                setVisible();\n                            } else {\n                                setHidden();\n                            }\n                        });\n                };\n\n            if (authority.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('hasAnyAuthority', hasAnyAuthority);\n\n    hasAnyAuthority.$inject = ['Principal'];\n\n    function hasAnyAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n                    var result;\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    result = Principal.hasAnyAuthority(authorities);\n                    if (result) {\n                        setVisible();\n                    } else {\n                        setHidden();\n                    }\n                };\n\n            if (authorities.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Auth', Auth);\n\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\n\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\n        var service = {\n            activateAccount: activateAccount,\n            authorize: authorize,\n            changePassword: changePassword,\n            createAccount: createAccount,\n            getPreviousState: getPreviousState,\n            login: login,\n            logout: logout,\n            loginWithToken: loginWithToken,\n            resetPasswordFinish: resetPasswordFinish,\n            resetPasswordInit: resetPasswordInit,\n            resetPreviousState: resetPreviousState,\n            storePreviousState: storePreviousState,\n            updateAccount: updateAccount\n        };\n\n        return service;\n\n        function activateAccount (key, callback) {\n            var cb = callback || angular.noop;\n\n            return Activate.get(key,\n                function (response) {\n                    return cb(response);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function authorize (force) {\n            var authReturn = Principal.identity(force).then(authThen);\n\n            return authReturn;\n\n            function authThen () {\n                var isAuthenticated = Principal.isAuthenticated();\n\n                // an authenticated user can't access to login and register pages\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register' || $rootScope.toState.name === 'social-auth')) {\n                    $state.go('home');\n                }\n\n                // recover and clear previousState after external login redirect (e.g. oauth2)\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                    var previousState = getPreviousState();\n                    resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                    if (isAuthenticated) {\n                        // user is signed in but not authorized for desired state\n                        $state.go('accessdenied');\n                    }\n                    else {\n                        // user is not authenticated. stow the state they wanted before you\n                        // send them to the login service, so you can return them when you're done\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                        // now, send them to the signin state so they can log in\n                        $state.go('accessdenied').then(function() {\n                            LoginService.open();\n                        });\n                    }\n                }\n            }\n        }\n\n        function changePassword (newPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return Password.save(newPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function createAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Register.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    this.logout();\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function login (credentials, callback) {\n            var cb = callback || angular.noop;\n            var deferred = $q.defer();\n\n            AuthServerProvider.login(credentials)\n                .then(loginThen)\n                .catch(function (err) {\n                    this.logout();\n                    deferred.reject(err);\n                    return cb(err);\n                }.bind(this));\n\n            function loginThen (data) {\n                Principal.identity(true).then(function(account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account!== null) {\n                        $translate.use(account.langKey).then(function () {\n                            $translate.refresh();\n                        });\n                    }\n                    deferred.resolve(data);\n                });\n                return cb();\n            }\n\n            return deferred.promise;\n        }\n\n        function loginWithToken(jwt, rememberMe) {\n            return AuthServerProvider.loginWithToken(jwt, rememberMe);\n        }\n\n        function logout () {\n            AuthServerProvider.logout();\n            Principal.authenticate(null);\n        }\n\n        function resetPasswordFinish (keyAndPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetFinish.save(keyAndPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function resetPasswordInit (mail, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetInit.save(mail, function() {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function updateAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Account.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function getPreviousState() {\n            var previousState = $sessionStorage.previousState;\n            return previousState;\n        }\n\n        function resetPreviousState() {\n            delete $sessionStorage.previousState;\n        }\n\n        function storePreviousState(previousStateName, previousStateParams) {\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n            $sessionStorage.previousState = previousState;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('AuthServerProvider', AuthServerProvider);\n\n    AuthServerProvider.$inject = ['$http', '$localStorage', '$sessionStorage', '$q'];\n\n    function AuthServerProvider ($http, $localStorage, $sessionStorage, $q) {\n        var service = {\n            getToken: getToken,\n            login: login,\n            loginWithToken: loginWithToken,\n            storeAuthenticationToken: storeAuthenticationToken,\n            logout: logout\n        };\n\n        return service;\n\n        function getToken () {\n            return $localStorage.authenticationToken || $sessionStorage.authenticationToken;\n        }\n\n        function login (credentials) {\n\n            var data = {\n                username: credentials.username,\n                password: credentials.password,\n                rememberMe: credentials.rememberMe\n            };\n            return $http.post('api/authenticate', data).success(authenticateSuccess);\n\n            function authenticateSuccess (data, status, headers) {\n                var bearerToken = headers('Authorization');\n                if (angular.isDefined(bearerToken) && bearerToken.slice(0, 7) === 'Bearer ') {\n                    var jwt = bearerToken.slice(7, bearerToken.length);\n                    service.storeAuthenticationToken(jwt, credentials.rememberMe);\n                    return jwt;\n                }\n            }\n        }\n\n        function loginWithToken(jwt, rememberMe) {\n            var deferred = $q.defer();\n\n            if (angular.isDefined(jwt)) {\n                this.storeAuthenticationToken(jwt, rememberMe);\n                deferred.resolve(jwt);\n            } else {\n                deferred.reject();\n            }\n\n            return deferred.promise;\n        }\n\n        function storeAuthenticationToken(jwt, rememberMe) {\n            if(rememberMe){\n                $localStorage.authenticationToken = jwt;\n            } else {\n                $sessionStorage.authenticationToken = jwt;\n            }\n        }\n\n        function logout () {\n            delete $localStorage.authenticationToken;\n            delete $sessionStorage.authenticationToken;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Activate', Activate);\n\n    Activate.$inject = ['$resource'];\n\n    function Activate ($resource) {\n        var service = $resource('api/activate', {}, {\n            'get': { method: 'GET', params: {}, isArray: false}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Account', Account);\n\n    Account.$inject = ['$resource'];\n\n    function Account ($resource) {\n        var service = $resource('api/account', {}, {\n            'get': { method: 'GET', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('NavbarController', NavbarController);\n\n    NavbarController.$inject = ['$state', 'Auth', 'Principal', 'ProfileService', 'LoginService'];\n\n    function NavbarController ($state, Auth, Principal, ProfileService, LoginService) {\n        var vm = this;\n\n        vm.isNavbarCollapsed = true;\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n        ProfileService.getProfileInfo().then(function(response) {\n            vm.inProduction = response.inProduction;\n            vm.swaggerEnabled = response.swaggerEnabled;\n        });\n\n        vm.login = login;\n        vm.logout = logout;\n        vm.toggleNavbar = toggleNavbar;\n        vm.collapseNavbar = collapseNavbar;\n        vm.$state = $state;\n\n        function login() {\n            collapseNavbar();\n            LoginService.open();\n        }\n\n        function logout() {\n            collapseNavbar();\n            Auth.logout();\n            $state.go('home');\n        }\n\n        function toggleNavbar() {\n            vm.isNavbarCollapsed = !vm.isNavbarCollapsed;\n        }\n\n        function collapseNavbar() {\n            vm.isNavbarCollapsed = true;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('activeMenu', activeMenu);\n\n    activeMenu.$inject = ['$translate', '$locale', 'tmhDynamicLocale'];\n\n    function activeMenu($translate, $locale, tmhDynamicLocale) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var language = attrs.activeMenu;\n\n            scope.$watch(function() {\n                return $translate.use();\n            }, function(selectedLanguage) {\n                if (language === selectedLanguage) {\n                    tmhDynamicLocale.set(language);\n                    element.addClass('active');\n                } else {\n                    element.removeClass('active');\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('error', {\n                parent: 'app',\n                url: '/error',\n                data: {\n                    authorities: [],\n                    pageTitle: 'error.title'\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/error.html'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('accessdenied', {\n                parent: 'app',\n                url: '/accessdenied',\n                data: {\n                    authorities: []\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/accessdenied.html'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('home', {\n            parent: 'app',\n            url: '/',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/home/home.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('home');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('HomeController', HomeController);\n\n    HomeController.$inject = ['$scope', 'Principal', 'LoginService', '$state'];\n\n    function HomeController ($scope, Principal, LoginService, $state) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        $scope.$on('authenticationSuccess', function() {\n            getAccount();\n        });\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n        function register () {\n            $state.go('register');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('entity', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .filter('words', words);\n\n    function words() {\n        return wordsFilter;\n\n        function wordsFilter(input, words) {\n            if (isNaN(words)) {\n                return input;\n            }\n            if (words <= 0) {\n                return '';\n            }\n            if (input) {\n                var inputWords = input.split(/\\s+/);\n                if (inputWords.length > words) {\n                    input = inputWords.slice(0, words).join(' ') + '...';\n                }\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .filter('characters', characters);\n\n    function characters () {\n        return charactersFilter;\n\n        function charactersFilter(input, chars, breakOnWord) {\n            if (isNaN(chars)) {\n                return input;\n            }\n            if (chars <= 0) {\n                return '';\n            }\n            if (input && input.length > chars) {\n                input = input.substring(0, chars);\n\n                if (!breakOnWord) {\n                    var lastspace = input.lastIndexOf(' ');\n                    // Get last space\n                    if (lastspace !== -1) {\n                        input = input.substr(0, lastspace);\n                    }\n                } else {\n                    while (input.charAt(input.length-1) === ' ') {\n                        input = input.substr(0, input.length - 1);\n                    }\n                }\n                return input + '...';\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('jhSortBy', jhSortBy);\n\n    function jhSortBy() {\n        var directive = {\n            restrict: 'A',\n            scope: false,\n            require: '^jhSort',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs, parentCtrl) {\n            element.bind('click', function () {\n                parentCtrl.sort(attrs.jhSortBy);\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('jhSort', jhSort);\n\n    function jhSort () {\n        var directive = {\n            restrict: 'A',\n            scope: {\n                predicate: '=jhSort',\n                ascending: '=',\n                callback: '&'\n            },\n            controller: SortController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n    }\n\n    SortController.$inject = ['$scope', '$element'];\n\n    function SortController ($scope, $element) {\n        var vm = this;\n\n        vm.applyClass = applyClass;\n        vm.resetClasses = resetClasses;\n        vm.sort = sort;\n        vm.triggerApply = triggerApply;\n\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\n        vm.triggerApply();\n\n        function applyClass (element) {\n            var thisIcon = element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\n                remove = sortIcon + ' ' + sortDesc,\n                add = sortAsc;\n            if (!vm.ascending) {\n                remove = sortIcon + ' ' + sortAsc;\n                add = sortDesc;\n            }\n            vm.resetClasses();\n            thisIcon.removeClass(remove);\n            thisIcon.addClass(add);\n        }\n\n        function resetClasses () {\n            var allThIcons = $element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\n            allThIcons.addClass(sortIcon);\n        }\n\n        function sort (field) {\n            if (field !== vm.predicate) {\n                vm.ascending = true;\n            } else {\n                vm.ascending = !vm.ascending;\n            }\n            vm.predicate = field;\n            $scope.$apply();\n            vm.callback();\n        }\n\n        function triggerApply (values)  {\n            vm.resetClasses();\n            if (values && values[0] !== '_score') {\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\n            }\n        }\n    }\n})();\n","(function(){\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('ParseLinks', ParseLinks);\n\n    function ParseLinks () {\n\n        var service = {\n            parse : parse\n        };\n\n        return service;\n\n        function parse(header) {\n            if (header.length === 0) {\n                throw new Error('input must not be of zero length');\n            }\n\n            // Split parts by comma\n            var parts = header.split(',');\n            var links = {};\n            // Parse each part into a named link\n            angular.forEach(parts, function(p) {\n                var section = p.split('>;');\n                if (section.length !== 2) {\n                    throw new Error('section could not be split on \">;\"');\n                }\n                var url = section[0].replace(/<(.*)/, '$1').trim();\n                var queryString = {};\n                url.replace(\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\n                );\n                var page = queryString.page;\n                if (angular.isString(page)) {\n                    page = parseInt(page);\n                }\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n                links[name] = page;\n            });\n            return links;\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('PaginationUtil', PaginationUtil);\n\n    function PaginationUtil () {\n\n        var service = {\n            parseAscending : parseAscending,\n            parsePage : parsePage,\n            parsePredicate : parsePredicate\n        };\n\n        return service;\n\n        function parseAscending (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                return sort.split(',').slice(-1)[0] === 'asc';\n            } else {\n                // default to true if no sort defined\n                return true;\n            }\n        }\n\n        // query params are strings, and need to be parsed\n        function parsePage (page) {\n            return parseInt(page);\n        }\n\n        // sort can be in the format `id,asc` or `id`\n        function parsePredicate (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                sortArray.pop();\n            }\n            return sortArray.join(',');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    var jhiItemCount = {\n        template: '<div class=\"info\">' +\n                    'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\n                    '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\n                    'of {{$ctrl.queryCount}} items.' +\n                '</div>',\n        bindings: {\n            page: '<',\n            queryCount: '<total',\n            itemsPerPage: '<'\n        }\n    };\n\n    angular\n        .module('coocotteApp')\n        .component('jhiItemCount', jhiItemCount);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('DateUtils', DateUtils);\n\n    DateUtils.$inject = ['$filter'];\n\n    function DateUtils($filter) {\n\n        var service = {\n            convertDateTimeFromServer: convertDateTimeFromServer,\n            convertLocalDateFromServer: convertLocalDateFromServer,\n            convertLocalDateToServer: convertLocalDateToServer,\n            dateformat: dateformat\n        };\n\n        return service;\n\n        function convertDateTimeFromServer(date) {\n            if (date) {\n                return new Date(date);\n            } else {\n                return null;\n            }\n        }\n\n        function convertLocalDateFromServer(date) {\n            if (date) {\n                var dateString = date.split('-');\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\n            }\n            return null;\n        }\n\n        function convertLocalDateToServer(date) {\n            if (date) {\n                return $filter('date')(date, 'yyyy-MM-dd');\n            } else {\n                return null;\n            }\n        }\n\n        function dateformat() {\n            return 'yyyy-MM-dd';\n        }\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('DataUtils', DataUtils);\n\n    DataUtils.$inject = ['$window'];\n\n    function DataUtils ($window) {\n\n        var service = {\n            abbreviate: abbreviate,\n            byteSize: byteSize,\n            openFile: openFile,\n            toBase64: toBase64\n        };\n\n        return service;\n\n        function abbreviate (text) {\n            if (!angular.isString(text)) {\n                return '';\n            }\n            if (text.length < 30) {\n                return text;\n            }\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\n        }\n\n        function byteSize (base64String) {\n            if (!angular.isString(base64String)) {\n                return '';\n            }\n\n            function endsWith(suffix, str) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function paddingSize(base64String) {\n                if (endsWith('==', base64String)) {\n                    return 2;\n                }\n                if (endsWith('=', base64String)) {\n                    return 1;\n                }\n                return 0;\n            }\n\n            function size(base64String) {\n                return base64String.length / 4 * 3 - paddingSize(base64String);\n            }\n\n            function formatAsBytes(size) {\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n            }\n\n            return formatAsBytes(size(base64String));\n        }\n\n        function openFile (type, data) {\n            $window.open('data:' + type + ';base64,' + data, '_blank', 'height=300,width=400');\n        }\n\n        function toBase64 (file, cb) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function (e) {\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n                cb(base64Data);\n            };\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .filter('capitalize', capitalize);\n\n    function capitalize() {\n        return capitalizeFilter;\n\n        function capitalizeFilter (input) {\n            if (input !== null) {\n                input = input.toLowerCase();\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\n            }\n            return input;\n        }\n    }\n})();\n","(function() {\n    /*jshint bitwise: false*/\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Base64', Base64);\n\n    function Base64 () {\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\n            'QRSTUVWXYZabcdef' +\n            'ghijklmnopqrstuv' +\n            'wxyz0123456789+/' +\n            '=';\n\n        var service = {\n            decode : decode,\n            encode : encode\n        };\n\n        return service;\n\n        function encode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n            }\n\n            return output;\n        }\n\n        function decode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n            while (i < input.length) {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 !== 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n            }\n\n            return output;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('LoginService', LoginService);\n\n    LoginService.$inject = ['$uibModal'];\n\n    function LoginService ($uibModal) {\n        var service = {\n            open: open\n        };\n\n        var modalInstance = null;\n        var resetModal = function () {\n            modalInstance = null;\n        };\n\n        return service;\n\n        function open () {\n            if (modalInstance !== null) return;\n            modalInstance = $uibModal.open({\n                animation: true,\n                templateUrl: 'app/components/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('login');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n            modalInstance.result.then(\n                resetModal,\n                resetModal\n            );\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\n\n    function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\n        var vm = this;\n\n        vm.authenticationError = false;\n        vm.cancel = cancel;\n        vm.credentials = {};\n        vm.login = login;\n        vm.password = null;\n        vm.register = register;\n        vm.rememberMe = true;\n        vm.requestResetPassword = requestResetPassword;\n        vm.username = null;\n\n        $timeout(function (){angular.element('#username').focus();});\n\n        function cancel () {\n            vm.credentials = {\n                username: null,\n                password: null,\n                rememberMe: true\n            };\n            vm.authenticationError = false;\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function login (event) {\n            event.preventDefault();\n            Auth.login({\n                username: vm.username,\n                password: vm.password,\n                rememberMe: vm.rememberMe\n            }).then(function () {\n                vm.authenticationError = false;\n                $uibModalInstance.close();\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\n                    $state.go('home');\n                }\n\n                $rootScope.$broadcast('authenticationSuccess');\n\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n                // since login is successful, go to stored previousState and clear previousState\n                if (Auth.getPreviousState()) {\n                    var previousState = Auth.getPreviousState();\n                    Auth.resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n            }).catch(function () {\n                vm.authenticationError = true;\n            });\n        }\n\n        function register () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('register');\n        }\n\n        function requestResetPassword () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('requestReset');\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('JhiLanguageService', JhiLanguageService);\n\n    JhiLanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES'];\n\n    function JhiLanguageService ($q, $http, $translate, LANGUAGES) {\n        var service = {\n            getAll: getAll,\n            getCurrent: getCurrent\n        };\n\n        return service;\n\n        function getAll () {\n            var deferred = $q.defer();\n            deferred.resolve(LANGUAGES);\n            return deferred.promise;\n        }\n\n        function getCurrent () {\n            var deferred = $q.defer();\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\n            deferred.resolve(language);\n\n            return deferred.promise;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .filter('findLanguageFromKey', findLanguageFromKey);\n\n    function findLanguageFromKey() {\n        return findLanguageFromKeyFilter;\n\n        function findLanguageFromKeyFilter(lang) {\n            return {\n                'ca': 'Català',\n                'cs': 'Český',\n                'da': 'Dansk',\n                'de': 'Deutsch',\n                'el': 'Ελληνικά',\n                'en': 'English',\n                'es': 'Español',\n                'et': 'Eesti',\n                'fr': 'Français',\n                'gl': 'Galego',\n                'hu': 'Magyar',\n                'hi': 'हिंदी',\n                'hy': 'Հայերեն',\n                'it': 'Italiano',\n                'ja': '日本語',\n                'ko': '한국어',\n                'mr': 'मराठी',\n                'nl': 'Nederlands',\n                'pl': 'Polski',\n                'pt-br': 'Português (Brasil)',\n                'pt-pt': 'Português',\n                'ro': 'Română',\n                'ru': 'Русский',\n                'sk': 'Slovenský',\n                'sr': 'Srpski',\n                'sv': 'Svenska',\n                'ta': 'தமிழ்',\n                'th': 'ไทย',\n                'tr': 'Türkçe',\n                'vi': 'Tiếng Việt',\n                'zh-cn': '中文（简体）',\n                'zh-tw': '繁體中文'\n            }[lang];\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiLanguageController', JhiLanguageController);\n\n    JhiLanguageController.$inject = ['$translate', 'JhiLanguageService', 'tmhDynamicLocale'];\n\n    function JhiLanguageController ($translate, JhiLanguageService, tmhDynamicLocale) {\n        var vm = this;\n\n        vm.changeLanguage = changeLanguage;\n        vm.languages = null;\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function changeLanguage (languageKey) {\n            $translate.use(languageKey);\n            tmhDynamicLocale.set(languageKey);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n\n        /*\n         Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n         They are written in English to avoid character encoding issues (not a perfect solution)\n         */\n        .constant('LANGUAGES', [\n            'fr'\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n        ]\n    );\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('showValidation', showValidation);\n\n    function showValidation () {\n        var directive = {\n            restrict: 'A',\n            require: 'form',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, formCtrl) {\n            element.find('.form-group').each(function() {\n                var $formGroup = angular.element(this);\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\n\n                if ($inputs.length > 0) {\n                    $inputs.each(function() {\n                        var $input = angular.element(this);\n                        var inputName = $input.attr('name');\n                        scope.$watch(function() {\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\n                        }, function(isInvalid) {\n                            $formGroup.toggleClass('has-error', isInvalid);\n                        });\n                    });\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .constant('paginationConstants', {\n            'itemsPerPage': 20\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('minbytes', minbytes);\n\n    function minbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.minbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('maxbytes', maxbytes);\n\n    function maxbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.maxbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    var jhiAlertError = {\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertErrorController\n    };\n\n    angular\n        .module('coocotteApp')\n        .component('jhiAlertError', jhiAlertError);\n\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\n\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\n        var vm = this;\n\n        vm.alerts = [];\n\n        function addErrorAlert (message, key, data) {\n            key = key ? key : message;\n            vm.alerts.push(\n                AlertService.add(\n                    {\n                        type: 'danger',\n                        msg: key,\n                        params: data,\n                        timeout: 5000,\n                        toast: AlertService.isToast(),\n                        scoped: true\n                    },\n                    vm.alerts\n                )\n            );\n        }\n\n        var cleanHttpErrorListener = $rootScope.$on('coocotteApp.httpError', function (event, httpResponse) {\n            var i;\n            event.stopPropagation();\n            switch (httpResponse.status) {\n            // connection refused, server not reachable\n            case 0:\n                addErrorAlert('Server not reachable','error.server.not.reachable');\n                break;\n\n            case 400:\n                var headers = Object.keys(httpResponse.headers()).filter(function (header) {\n                    return header.indexOf('app-error', header.length - 'app-error'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\n                }).sort();\n                var errorHeader = httpResponse.headers(headers[0]);\n                var entityKey = httpResponse.headers(headers[1]);\n                if (errorHeader) {\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n                        var fieldError = httpResponse.data.fieldErrors[i];\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                        var fieldName = $translate.instant('coocotteApp.' + fieldError.objectName + '.' + convertedField);\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\n                    }\n                } else if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n                } else {\n                    addErrorAlert(httpResponse.data);\n                }\n                break;\n\n            case 404:\n                addErrorAlert('Not found','error.url.not.found');\n                break;\n\n            default:\n                if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message);\n                } else {\n                    addErrorAlert(angular.toJson(httpResponse));\n                }\n            }\n        });\n\n        $scope.$on('$destroy', function () {\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\n                cleanHttpErrorListener();\n                vm.alerts = [];\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .provider('AlertService', AlertService);\n\n    function AlertService () {\n        this.toast = false;\n        /*jshint validthis: true */\n        this.$get = getService;\n\n        this.showAsToast = function(isToast) {\n            this.toast = isToast;\n        };\n\n        getService.$inject = ['$timeout', '$sce', '$translate'];\n\n        function getService ($timeout, $sce,$translate) {\n            var toast = this.toast,\n                alertId = 0, // unique id for each alert. Starts from 0.\n                alerts = [],\n                timeout = 5000; // default timeout\n\n            return {\n                factory: factory,\n                isToast: isToast,\n                add: addAlert,\n                closeAlert: closeAlert,\n                closeAlertByIndex: closeAlertByIndex,\n                clear: clear,\n                get: get,\n                success: success,\n                error: error,\n                info: info,\n                warning : warning\n            };\n\n            function isToast() {\n                return toast;\n            }\n\n            function clear() {\n                alerts = [];\n            }\n\n            function get() {\n                return alerts;\n            }\n\n            function success(msg, params, position) {\n                return this.add({\n                    type: 'success',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function error(msg, params, position) {\n                return this.add({\n                    type: 'danger',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function warning(msg, params, position) {\n                return this.add({\n                    type: 'warning',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function info(msg, params, position) {\n                return this.add({\n                    type: 'info',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function factory(alertOptions) {\n                var alert = {\n                    type: alertOptions.type,\n                    msg: $sce.trustAsHtml(alertOptions.msg),\n                    id: alertOptions.alertId,\n                    timeout: alertOptions.timeout,\n                    toast: alertOptions.toast,\n                    position: alertOptions.position ? alertOptions.position : 'top right',\n                    scoped: alertOptions.scoped,\n                    close: function (alerts) {\n                        return closeAlert(this.id, alerts);\n                    }\n                };\n                if(!alert.scoped) {\n                    alerts.push(alert);\n                }\n                return alert;\n            }\n\n            function addAlert(alertOptions, extAlerts) {\n                alertOptions.alertId = alertId++;\n                alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n                var that = this;\n                var alert = this.factory(alertOptions);\n                if (alertOptions.timeout && alertOptions.timeout > 0) {\n                    $timeout(function () {\n                        that.closeAlert(alertOptions.alertId, extAlerts);\n                    }, alertOptions.timeout);\n                }\n                return alert;\n            }\n\n            function closeAlert(id, extAlerts) {\n                var thisAlerts = extAlerts ? extAlerts : alerts;\n                return closeAlertByIndex(thisAlerts.map(function(e) { return e.id; }).indexOf(id), thisAlerts);\n            }\n\n            function closeAlertByIndex(index, thisAlerts) {\n                return thisAlerts.splice(index, 1);\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    var jhiAlert = {\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre ng-bind-html=\"alert.msg\"></pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertController\n    };\n\n    angular\n        .module('coocotteApp')\n        .component('jhiAlert', jhiAlert);\n\n    jhiAlertController.$inject = ['$scope', 'AlertService'];\n\n    function jhiAlertController($scope, AlertService) {\n        var vm = this;\n\n        vm.alerts = AlertService.get();\n        $scope.$on('$destroy', function () {\n            vm.alerts = [];\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('notificationInterceptor', notificationInterceptor);\n\n    notificationInterceptor.$inject = ['$q', 'AlertService'];\n\n    function notificationInterceptor ($q, AlertService) {\n        var service = {\n            response: response\n        };\n\n        return service;\n\n        function response (response) {\n            var headers = Object.keys(response.headers()).filter(function (header) {\n                return header.indexOf('app-alert', header.length - 'app-alert'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\n            }).sort();\n            var alertKey = response.headers(headers[0]);\n            if (angular.isString(alertKey)) {\n                AlertService.success(alertKey, { param : response.headers(headers[1])});\n            }\n            return response;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\n\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\n\n    function errorHandlerInterceptor ($q, $rootScope) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError (response) {\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\n                $rootScope.$emit('coocotteApp.httpError', response);\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\n\n    authExpiredInterceptor.$inject = ['$rootScope', '$q', '$injector', '$localStorage', '$sessionStorage'];\n\n    function authExpiredInterceptor($rootScope, $q, $injector, $localStorage, $sessionStorage) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError(response) {\n            if (response.status === 401) {\n                delete $localStorage.authenticationToken;\n                delete $sessionStorage.authenticationToken;\n                var Principal = $injector.get('Principal');\n                if (Principal.isAuthenticated()) {\n                    var Auth = $injector.get('Auth');\n                    Auth.authorize(true);\n                }\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('authInterceptor', authInterceptor);\n\n    authInterceptor.$inject = ['$rootScope', '$q', '$location', '$localStorage', '$sessionStorage'];\n\n    function authInterceptor ($rootScope, $q, $location, $localStorage, $sessionStorage) {\n        var service = {\n            request: request\n        };\n\n        return service;\n\n        function request (config) {\n            /*jshint camelcase: false */\n            config.headers = config.headers || {};\n            var token = $localStorage.authenticationToken || $sessionStorage.authenticationToken;\n            if (token) {\n                config.headers.Authorization = 'Bearer ' + token;\n            }\n            return config;\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('translationHandler', translationHandler);\n\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\n\n    function translationHandler($rootScope, $window, $state, $translate) {\n        return {\n            initialize: initialize,\n            updateTitle: updateTitle\n        };\n\n        function initialize() {\n            // if the current translation changes, update the window title\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\n                updateTitle();\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\n                    translateChangeSuccess();\n                }\n            });\n        }\n\n        // update the window title using params in the following\n        // precedence\n        // 1. titleKey parameter\n        // 2. $state.$current.data.pageTitle (current state page title)\n        // 3. 'global.title'\n        function updateTitle(titleKey) {\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\n                titleKey = $state.$current.data.pageTitle;\n            }\n            $translate(titleKey || 'global.title').then(function (title) {\n                $window.document.title = title;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('stateHandler', stateHandler);\n\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'JhiLanguageService', 'translationHandler', '$window',\n        'Auth', 'Principal', 'VERSION'];\n\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, JhiLanguageService, translationHandler, $window,\n        Auth, Principal, VERSION) {\n        return {\n            initialize: initialize\n        };\n\n        function initialize() {\n            $rootScope.VERSION = VERSION;\n\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\n                $rootScope.toState = toState;\n                $rootScope.toStateParams = toStateParams;\n                $rootScope.fromState = fromState;\n\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\n                if (toState.external) {\n                    event.preventDefault();\n                    $window.open(toState.url, '_self');\n                }\n\n                if (Principal.isIdentityResolved()) {\n                    Auth.authorize();\n                }\n\n                // Update the language\n                JhiLanguageService.getCurrent().then(function (language) {\n                    $translate.use(language);\n                });\n            });\n\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\n                var titleKey = 'global.title' ;\n\n                // Set the page title key to the one configured in state or use default one\n                if (toState.data.pageTitle) {\n                    titleKey = toState.data.pageTitle;\n                }\n                translationHandler.updateTitle(titleKey);\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\n                    stateChangeStart();\n                }\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\n                    stateChangeSuccess();\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(paginationConfig);\n\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\n\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPaginationConfig.maxSize = 5;\n        uibPaginationConfig.boundaryLinks = true;\n        uibPaginationConfig.firstText = '«';\n        uibPaginationConfig.previousText = '‹';\n        uibPaginationConfig.nextText = '›';\n        uibPaginationConfig.lastText = '»';\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(pagerConfig);\n\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\n\n    function pagerConfig(uibPagerConfig, paginationConstants) {\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPagerConfig.previousText = '«';\n        uibPagerConfig.nextText = '»';\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('translationStorageProvider', translationStorageProvider);\n\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\n        return {\n            get: get,\n            put: put\n        };\n\n        function get(name) {\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to preferred language \"fr\"');\n                $cookies.putObject(name, 'fr');\n            }\n            return $cookies.getObject(name);\n        }\n\n        function put(name, value) {\n            $cookies.putObject(name, value);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(translationConfig);\n\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n        // Initialize angular-translate\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'i18n/{lang}/{part}.json'\n        });\n\n        $translateProvider.preferredLanguage('fr');\n        $translateProvider.useStorage('translationStorageProvider');\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n        tmhDynamicLocaleProvider.useCookieStorage();\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(localStorageConfig);\n\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n        $localStorageProvider.setKeyPrefix('jhi-');\n        $sessionStorageProvider.setKeyPrefix('jhi-');\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(httpConfig);\n\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\n\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\n        //Cache everything except rest api requests\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\n        $httpProvider.interceptors.push('authExpiredInterceptor');\n        $httpProvider.interceptors.push('authInterceptor');\n        $httpProvider.interceptors.push('notificationInterceptor');\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\n\n        $urlMatcherFactoryProvider.type('boolean', {\n            name : 'boolean',\n            decode: function(val) { return val === true || val === 'true'; },\n            encode: function(val) { return val ? 1 : 0; },\n            equals: function(a, b) { return this.is(a) && a === b; },\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\n            pattern: /bool|true|0|1/\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(compileServiceConfig);\n\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\n\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\n        // disable debug data on prod profile to improve performance\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\n\n        /*\n        If you wish to debug an application with this information\n        then you should open up a debug console in the browser\n        then call this method directly in this console:\n\n\t\tangular.reloadWithDebugInfo();\n\t\t*/\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(alertServiceConfig);\n\n    alertServiceConfig.$inject = ['AlertServiceProvider'];\n\n    function alertServiceConfig(AlertServiceProvider) {\n        // set below to true to make alerts look like toast\n        AlertServiceProvider.showAsToast(false);\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('app', {\n            abstract: true,\n            views: {\n                'navbar@': {\n                    templateUrl: 'app/layouts/navbar/navbar.html',\n                    controller: 'NavbarController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                authorize: ['Auth',\n                    function (Auth) {\n                        return Auth.authorize();\n                    }\n                ],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('global');\n                }]\n            }\n        });\n    }\n})();\n","(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('coocotteApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n;\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('UserManagementDialogController',UserManagementDialogController);\n\n    UserManagementDialogController.$inject = ['$stateParams', '$uibModalInstance', 'entity', 'User', 'JhiLanguageService'];\n\n    function UserManagementDialogController ($stateParams, $uibModalInstance, entity, User, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.clear = clear;\n        vm.languages = null;\n        vm.save = save;\n        vm.user = entity;\n\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function onSaveSuccess (result) {\n            vm.isSaving = false;\n            $uibModalInstance.close(result);\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.user.id !== null) {\n                User.update(vm.user, onSaveSuccess, onSaveError);\n            } else {\n                User.save(vm.user, onSaveSuccess, onSaveError);\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('UserManagementDetailController', UserManagementDetailController);\n\n    UserManagementDetailController.$inject = ['$stateParams', 'User'];\n\n    function UserManagementDetailController ($stateParams, User) {\n        var vm = this;\n\n        vm.load = load;\n        vm.user = {};\n\n        vm.load($stateParams.login);\n\n        function load (login) {\n            User.get({login: login}, function(result) {\n                vm.user = result;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('UserManagementDeleteController', UserManagementDeleteController);\n\n    UserManagementDeleteController.$inject = ['$uibModalInstance', 'entity', 'User'];\n\n    function UserManagementDeleteController ($uibModalInstance, entity, User) {\n        var vm = this;\n\n        vm.user = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (login) {\n            User.delete({login: login},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('user-management', {\n            parent: 'admin',\n            url: '/user-management?page&sort',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'userManagement.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management.html',\n                    controller: 'UserManagementController',\n                    controllerAs: 'vm'\n                }\n            },            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                }\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort)\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n\n            }        })\n        .state('user-management.new', {\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                id: null, login: null, firstName: null, lastName: null, email: null,\n                                activated: true, langKey: null, createdBy: null, createdDate: null,\n                                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                                resetKey: null, authorities: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('user-management');\n                });\n            }]\n        })\n        .state('user-management.edit', {\n            url: '/{login}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('user-management-detail', {\n            parent: 'user-management',\n            url: '/{login}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'user-management.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management-detail.html',\n                    controller: 'UserManagementDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('user-management.delete', {\n            url: '/{login}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-delete-dialog.html',\n                    controller: 'UserManagementDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('UserManagementController', UserManagementController);\n\n    UserManagementController.$inject = ['Principal', 'User', 'ParseLinks', 'AlertService', '$state', 'pagingParams', 'paginationConstants', 'JhiLanguageService'];\n\n    function UserManagementController(Principal, User, ParseLinks, AlertService, $state, pagingParams, paginationConstants, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.currentAccount = null;\n        vm.languages = null;\n        vm.loadAll = loadAll;\n        vm.setActive = setActive;\n        vm.users = [];\n        vm.page = 1;\n        vm.totalItems = null;\n        vm.clear = clear;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.transition = transition;\n\n        vm.loadAll();\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n        Principal.identity().then(function(account) {\n            vm.currentAccount = account;\n        });\n\n        function setActive (user, isActivated) {\n            user.activated = isActivated;\n            User.update(user, function () {\n                vm.loadAll();\n                vm.clear();\n            });\n        }\n\n        function loadAll () {\n            User.query({\n                page: pagingParams.page - 1,\n                size: vm.itemsPerPage,\n                sort: sort()\n            }, onSuccess, onError);\n        }\n\n        function onSuccess(data, headers) {\n            vm.links = ParseLinks.parse(headers('link'));\n            vm.totalItems = headers('X-Total-Count');\n            vm.queryCount = vm.totalItems;\n            vm.page = pagingParams.page;\n            vm.users = data;\n        }\n\n        function onError(error) {\n            AlertService.error(error.data.message);\n        }\n\n        function clear () {\n            vm.user = {\n                id: null, login: null, firstName: null, lastName: null, email: null,\n                activated: null, langKey: null, createdBy: null, createdDate: null,\n                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                resetKey: null, authorities: null\n            };\n        }\n\n        function sort () {\n            var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n            if (vm.predicate !== 'id') {\n                result.push('id');\n            }\n            return result;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-metrics', {\n            parent: 'admin',\n            url: '/metrics',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'metrics.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/metrics/metrics.html',\n                    controller: 'JhiMetricsMonitoringController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('metrics');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('JhiMetricsService', JhiMetricsService);\n\n    JhiMetricsService.$inject = ['$rootScope', '$http'];\n\n    function JhiMetricsService ($rootScope, $http) {\n        var service = {\n            getMetrics: getMetrics,\n            threadDump: threadDump\n        };\n\n        return service;\n\n        function getMetrics () {\n            return $http.get('management/metrics').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function threadDump () {\n            return $http.get('management/dump').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiMetricsMonitoringModalController', JhiMetricsMonitoringModalController);\n\n    JhiMetricsMonitoringModalController.$inject = ['$uibModalInstance', 'threadDump'];\n\n    function JhiMetricsMonitoringModalController ($uibModalInstance, threadDump) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.getLabelClass = getLabelClass;\n        vm.threadDump = threadDump;\n        vm.threadDumpAll = 0;\n        vm.threadDumpBlocked = 0;\n        vm.threadDumpRunnable = 0;\n        vm.threadDumpTimedWaiting = 0;\n        vm.threadDumpWaiting = 0;\n\n        angular.forEach(threadDump, function(value) {\n            if (value.threadState === 'RUNNABLE') {\n                vm.threadDumpRunnable += 1;\n            } else if (value.threadState === 'WAITING') {\n                vm.threadDumpWaiting += 1;\n            } else if (value.threadState === 'TIMED_WAITING') {\n                vm.threadDumpTimedWaiting += 1;\n            } else if (value.threadState === 'BLOCKED') {\n                vm.threadDumpBlocked += 1;\n            }\n        });\n\n        vm.threadDumpAll = vm.threadDumpRunnable + vm.threadDumpWaiting +\n            vm.threadDumpTimedWaiting + vm.threadDumpBlocked;\n\n        function cancel () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function getLabelClass (threadState) {\n            if (threadState === 'RUNNABLE') {\n                return 'label-success';\n            } else if (threadState === 'WAITING') {\n                return 'label-info';\n            } else if (threadState === 'TIMED_WAITING') {\n                return 'label-warning';\n            } else if (threadState === 'BLOCKED') {\n                return 'label-danger';\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiMetricsMonitoringController', JhiMetricsMonitoringController);\n\n    JhiMetricsMonitoringController.$inject = ['$scope','JhiMetricsService', '$uibModal'];\n\n    function JhiMetricsMonitoringController ($scope, JhiMetricsService, $uibModal) {\n        var vm = this;\n\n        vm.cachesStats = {};\n        vm.metrics = {};\n        vm.refresh = refresh;\n        vm.refreshThreadDumpData = refreshThreadDumpData;\n        vm.servicesStats = {};\n        vm.updatingMetrics = true;\n\n        vm.refresh();\n\n        $scope.$watch('vm.metrics', function (newValue) {\n            vm.servicesStats = {};\n            angular.forEach(newValue.timers, function (value, key) {\n                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {\n                    vm.servicesStats[key] = value;\n                }\n            });\n\n            vm.cachesStats = {};\n            angular.forEach(newValue.gauges, function (value, key) {\n                if (key.indexOf('jcache.statistics') !== -1) {\n                    // remove gets or puts\n                    var index = key.lastIndexOf('.');\n                    var newKey = key.substr(0, index);\n\n                    // Keep the name of the domain\n                    vm.cachesStats[newKey] = {\n                        'name': newKey.substr(18),\n                        'value': value\n                    };\n                }\n            });\n        });\n\n        function refresh () {\n            vm.updatingMetrics = true;\n            JhiMetricsService.getMetrics().then(function (promise) {\n                vm.metrics = promise;\n                vm.updatingMetrics = false;\n            }, function (promise) {\n                vm.metrics = promise.data;\n                vm.updatingMetrics = false;\n            });\n        }\n\n        function refreshThreadDumpData () {\n            JhiMetricsService.threadDump().then(function(data) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/metrics/metrics.modal.html',\n                    controller: 'JhiMetricsMonitoringModalController',\n                    controllerAs: 'vm',\n                    size: 'lg',\n                    resolve: {\n                        threadDump: function() {\n                            return data;\n                        }\n\n                    }\n                });\n            });\n        }\n\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('logs', {\n            parent: 'admin',\n            url: '/logs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'logs.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/logs/logs.html',\n                    controller: 'LogsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('logs');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('LogsService', LogsService);\n\n    LogsService.$inject = ['$resource'];\n\n    function LogsService ($resource) {\n        var service = $resource('management/logs', {}, {\n            'findAll': { method: 'GET', isArray: true},\n            'changeLevel': { method: 'PUT'}\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('LogsController', LogsController);\n\n    LogsController.$inject = ['LogsService'];\n\n    function LogsController (LogsService) {\n        var vm = this;\n\n        vm.changeLevel = changeLevel;\n        vm.loggers = LogsService.findAll();\n\n        function changeLevel (name, level) {\n            LogsService.changeLevel({name: name, level: level}, function () {\n                vm.loggers = LogsService.findAll();\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-health', {\n            parent: 'admin',\n            url: '/health',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'health.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/health/health.html',\n                    controller: 'JhiHealthCheckController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('health');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('JhiHealthService', JhiHealthService);\n\n    JhiHealthService.$inject = ['$rootScope', '$http'];\n\n    function JhiHealthService ($rootScope, $http) {\n        var separator = '.';\n        var service = {\n            checkHealth: checkHealth,\n            transformHealthData: transformHealthData,\n            getBaseName: getBaseName,\n            getSubSystemName: getSubSystemName\n        };\n\n        return service;\n\n        function checkHealth () {\n            return $http.get('management/health').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function transformHealthData (data) {\n            var response = [];\n            flattenHealthData(response, null, data);\n            return response;\n        }\n\n        function getBaseName (name) {\n            if (name) {\n                var split = name.split('.');\n                return split[0];\n            }\n        }\n\n        function getSubSystemName (name) {\n            if (name) {\n                var split = name.split('.');\n                split.splice(0, 1);\n                var remainder = split.join('.');\n                return remainder ? ' - ' + remainder : '';\n            }\n        }\n\n        /* private methods */\n        function flattenHealthData (result, path, data) {\n            angular.forEach(data, function (value, key) {\n                if (isHealthObject(value)) {\n                    if (hasSubSystem(value)) {\n                        addHealthObject(result, false, value, getModuleName(path, key));\n                        flattenHealthData(result, getModuleName(path, key), value);\n                    } else {\n                        addHealthObject(result, true, value, getModuleName(path, key));\n                    }\n                }\n            });\n            return result;\n        }\n\n        function addHealthObject (result, isLeaf, healthObject, name) {\n\n            var healthData = {\n                'name': name\n            };\n            var details = {};\n            var hasDetails = false;\n\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status' || key === 'error') {\n                    healthData[key] = value;\n                } else {\n                    if (!isHealthObject(value)) {\n                        details[key] = value;\n                        hasDetails = true;\n                    }\n                }\n            });\n\n            // Add the of the details\n            if (hasDetails) {\n                angular.extend(healthData, { 'details': details});\n            }\n\n            // Only add nodes if they provide additional information\n            if (isLeaf || hasDetails || healthData.error) {\n                result.push(healthData);\n            }\n            return healthData;\n        }\n\n        function getModuleName (path, name) {\n            var result;\n            if (path && name) {\n                result = path + separator + name;\n            }  else if (path) {\n                result = path;\n            } else if (name) {\n                result = name;\n            } else {\n                result = '';\n            }\n            return result;\n        }\n\n        function hasSubSystem (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value) {\n                if (value && value.status) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n        function isHealthObject (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status') {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular.module('coocotteApp')\n        .controller('HealthModalController', HealthModalController);\n\n    HealthModalController.$inject = ['$uibModalInstance', 'currentHealth', 'baseName', 'subSystemName'];\n\n    function HealthModalController ($uibModalInstance, currentHealth, baseName, subSystemName) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.currentHealth = currentHealth;\n        vm.baseName = baseName;\n        vm.subSystemName = subSystemName;\n\n        function cancel() {\n            $uibModalInstance.dismiss('cancel');\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiHealthCheckController', JhiHealthCheckController);\n\n    JhiHealthCheckController.$inject = ['JhiHealthService', '$uibModal'];\n\n    function JhiHealthCheckController (JhiHealthService, $uibModal) {\n        var vm = this;\n\n        vm.updatingHealth = true;\n        vm.getLabelClass = getLabelClass;\n        vm.refresh = refresh;\n        vm.showHealth = showHealth;\n        vm.baseName = JhiHealthService.getBaseName;\n        vm.subSystemName = JhiHealthService.getSubSystemName;\n\n        vm.refresh();\n\n        function getLabelClass (statusState) {\n            if (statusState === 'UP') {\n                return 'label-success';\n            } else {\n                return 'label-danger';\n            }\n        }\n\n        function refresh () {\n            vm.updatingHealth = true;\n            JhiHealthService.checkHealth().then(function (response) {\n                vm.healthData = JhiHealthService.transformHealthData(response);\n                vm.updatingHealth = false;\n            }, function (response) {\n                vm.healthData =  JhiHealthService.transformHealthData(response.data);\n                vm.updatingHealth = false;\n            });\n        }\n\n        function showHealth (health) {\n            $uibModal.open({\n                templateUrl: 'app/admin/health/health.modal.html',\n                controller: 'HealthModalController',\n                controllerAs: 'vm',\n                size: 'lg',\n                resolve: {\n                    currentHealth: function() {\n                        return health;\n                    },\n                    baseName: function() {\n                        return vm.baseName;\n                    },\n                    subSystemName: function() {\n                        return vm.subSystemName;\n                    }\n\n                }\n            });\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('docs', {\n            parent: 'admin',\n            url: '/docs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'global.menu.admin.apidocs'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/docs/docs.html'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', function ($translate) {\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-configuration', {\n            parent: 'admin',\n            url: '/configuration',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'configuration.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/configuration/configuration.html',\n                    controller: 'JhiConfigurationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('configuration');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('JhiConfigurationService', JhiConfigurationService);\n\n    JhiConfigurationService.$inject = ['$filter', '$http'];\n\n    function JhiConfigurationService ($filter, $http) {\n        var service = {\n            get: get,\n            getEnv: getEnv\n        };\n\n        return service;\n\n        function get () {\n            return $http.get('management/configprops').then(getConfigPropsComplete);\n\n            function getConfigPropsComplete (response) {\n                var properties = [];\n                angular.forEach(response.data, function (data) {\n                    properties.push(data);\n                });\n                var orderBy = $filter('orderBy');\n                return orderBy(properties, 'prefix');\n            }\n        }\n\n        function getEnv () {\n            return $http.get('management/env').then(getEnvComplete);\n\n            function getEnvComplete (response) {\n                var properties = {};\n                angular.forEach(response.data, function (val,key) {\n                    var vals = [];\n                    angular.forEach(val, function (v,k) {\n                        vals.push({ key:k, val:v });\n                    });\n                    properties[key] = vals;\n                });\n                return properties;\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiConfigurationController', JhiConfigurationController);\n\n    JhiConfigurationController.$inject = ['$filter','JhiConfigurationService'];\n\n    function JhiConfigurationController (filter,JhiConfigurationService) {\n        var vm = this;\n\n        vm.allConfiguration = null;\n        vm.configuration = null;\n\n        JhiConfigurationService.get().then(function(configuration) {\n            vm.configuration = configuration;\n        });\n        JhiConfigurationService.getEnv().then(function (configuration) {\n            vm.allConfiguration = configuration;\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('audits', {\n            parent: 'admin',\n            url: '/audits',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'audits.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/audits/audits.html',\n                    controller: 'AuditsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('audits');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('AuditsService', AuditsService);\n\n    AuditsService.$inject = ['$resource'];\n\n    function AuditsService ($resource) {\n        var service = $resource('management/audits/:id', {}, {\n            'get': {\n                method: 'GET',\n                isArray: true\n            },\n            'query': {\n                method: 'GET',\n                isArray: true,\n                params: {fromDate: null, toDate: null}\n            }\n        });\n\n        return service;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('AuditsController', AuditsController);\n\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\n\n    function AuditsController ($filter, AuditsService, ParseLinks) {\n        var vm = this;\n\n        vm.audits = null;\n        vm.fromDate = null;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.onChangeDate = onChangeDate;\n        vm.page = 1;\n        vm.previousMonth = previousMonth;\n        vm.toDate = null;\n        vm.today = today;\n        vm.totalItems = null;\n\n        vm.today();\n        vm.previousMonth();\n        vm.onChangeDate();\n\n        function onChangeDate () {\n            var dateFormat = 'yyyy-MM-dd';\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\n            var toDate = $filter('date')(vm.toDate, dateFormat);\n\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\n                vm.audits = result;\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n            });\n        }\n\n        // Date picker configuration\n        function today () {\n            // Today + 1 day - needed if the current day must be included\n            var today = new Date();\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        }\n\n        function previousMonth () {\n            var fromDate = new Date();\n            if (fromDate.getMonth() === 0) {\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n            } else {\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n            }\n\n            vm.fromDate = fromDate;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.onChangeDate();\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('admin', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('settings', {\n            parent: 'account',\n            url: '/settings',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.settings'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('settings');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = ['Principal', 'Auth', 'JhiLanguageService', '$translate'];\n\n    function SettingsController (Principal, Auth, JhiLanguageService, $translate) {\n        var vm = this;\n\n        vm.error = null;\n        vm.save = save;\n        vm.settingsAccount = null;\n        vm.success = null;\n\n        /**\n         * Store the \"settings account\" in a separate variable, and not in the shared \"account\" variable.\n         */\n        var copyAccount = function (account) {\n            return {\n                activated: account.activated,\n                email: account.email,\n                firstName: account.firstName,\n                langKey: account.langKey,\n                lastName: account.lastName,\n                login: account.login\n            };\n        };\n\n        Principal.identity().then(function(account) {\n            vm.settingsAccount = copyAccount(account);\n        });\n\n        function save () {\n            Auth.updateAccount(vm.settingsAccount).then(function() {\n                vm.error = null;\n                vm.success = 'OK';\n                Principal.identity(true).then(function(account) {\n                    vm.settingsAccount = copyAccount(account);\n                });\n                JhiLanguageService.getCurrent().then(function(current) {\n                    if (vm.settingsAccount.langKey !== current) {\n                        $translate.use(vm.settingsAccount.langKey);\n                    }\n                });\n            }).catch(function() {\n                vm.success = null;\n                vm.error = 'ERROR';\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('requestReset', {\n            parent: 'account',\n            url: '/reset/request',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/request/reset.request.html',\n                    controller: 'RequestResetController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('RequestResetController', RequestResetController);\n\n    RequestResetController.$inject = ['$timeout', 'Auth'];\n\n    function RequestResetController ($timeout, Auth) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorEmailNotExists = null;\n        vm.requestReset = requestReset;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#email').focus();});\n\n        function requestReset () {\n\n            vm.error = null;\n            vm.errorEmailNotExists = null;\n\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'email address not registered') {\n                    vm.errorEmailNotExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('finishReset', {\n            parent: 'account',\n            url: '/reset/finish?key',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\n                    controller: 'ResetFinishController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('ResetFinishController', ResetFinishController);\n\n    ResetFinishController.$inject = ['$stateParams', '$timeout', 'Auth', 'LoginService'];\n\n    function ResetFinishController ($stateParams, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.keyMissing = angular.isUndefined($stateParams.key);\n        vm.confirmPassword = null;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.finishReset = finishReset;\n        vm.login = LoginService.open;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#password').focus();});\n\n        function finishReset() {\n            vm.doNotMatch = null;\n            vm.error = null;\n            if (vm.resetAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: vm.resetAccount.password}).then(function () {\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('register', {\n            parent: 'account',\n            url: '/register',\n            data: {\n                authorities: [],\n                pageTitle: 'register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/register/register.html',\n                    controller: 'RegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('register');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('RegisterController', RegisterController);\n\n\n    RegisterController.$inject = ['$translate', '$timeout', 'Auth', 'LoginService'];\n\n    function RegisterController ($translate, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.errorUserExists = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.registerAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#login').focus();});\n\n        function register () {\n            if (vm.registerAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.registerAccount.langKey = $translate.use();\n                vm.doNotMatch = null;\n                vm.error = null;\n                vm.errorUserExists = null;\n                vm.errorEmailExists = null;\n\n                Auth.createAccount(vm.registerAccount).then(function () {\n                    vm.success = 'OK';\n                }).catch(function (response) {\n                    vm.success = null;\n                    if (response.status === 400 && response.data === 'login already in use') {\n                        vm.errorUserExists = 'ERROR';\n                    } else if (response.status === 400 && response.data === 'email address already in use') {\n                        vm.errorEmailExists = 'ERROR';\n                    } else {\n                        vm.error = 'ERROR';\n                    }\n                });\n            }\n        }\n    }\n})();\n","/* globals $ */\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('passwordStrengthBar', passwordStrengthBar);\n\n    function passwordStrengthBar () {\n        var directive = {\n            replace: true,\n            restrict: 'E',\n            template: '<div id=\"strength\">' +\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\n                '<ul id=\"strengthBar\">' +\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\n                '</ul>' +\n                '</div>',\n            scope: {\n                passwordToCheck: '='\n            },\n            link: linkFunc\n        };\n\n        return directive;\n\n        /* private helper methods*/\n\n        function linkFunc(scope, iElement) {\n            var strength = {\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\n                mesureStrength: function (p) {\n\n                    var _force = 0;\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n\n                    var _lowerLetters = /[a-z]+/.test(p);\n                    var _upperLetters = /[A-Z]+/.test(p);\n                    var _numbers = /[0-9]+/.test(p);\n                    var _symbols = _regex.test(p);\n\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\n                    var _passedMatches = $.grep(_flags, function (el) {\n                        return el === true;\n                    }).length;\n\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n                    _force += _passedMatches * 10;\n\n                    // penalty (short password)\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\n\n                    // penalty (poor variety of characters)\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\n\n                    return _force;\n\n                },\n                getColor: function (s) {\n\n                    var idx;\n                    if (s <= 10) {\n                        idx = 0;\n                    }\n                    else if (s <= 20) {\n                        idx = 1;\n                    }\n                    else if (s <= 30) {\n                        idx = 2;\n                    }\n                    else if (s <= 40) {\n                        idx = 3;\n                    }\n                    else {\n                        idx = 4;\n                    }\n\n                    return { idx: idx + 1, col: this.colors[idx] };\n                }\n            };\n            scope.$watch('passwordToCheck', function (password) {\n                if (password) {\n                    var c = strength.getColor(strength.mesureStrength(password));\n                    iElement.removeClass('ng-hide');\n                    iElement.find('ul').children('li')\n                        .css({ 'background-color': '#DDD' })\n                        .slice(0, c.idx)\n                        .css({ 'background-color': c.col });\n                }\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('password', {\n            parent: 'account',\n            url: '/password',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.password'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/password/password.html',\n                    controller: 'PasswordController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('password');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('PasswordController', PasswordController);\n\n    PasswordController.$inject = ['Auth', 'Principal'];\n\n    function PasswordController (Auth, Principal) {\n        var vm = this;\n\n        vm.changePassword = changePassword;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.success = null;\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function changePassword () {\n            if (vm.password !== vm.confirmPassword) {\n                vm.error = null;\n                vm.success = null;\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.doNotMatch = null;\n                Auth.changePassword(vm.password).then(function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('activate', {\n            parent: 'account',\n            url: '/activate?key',\n            data: {\n                authorities: [],\n                pageTitle: 'activate.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/activate/activate.html',\n                    controller: 'ActivationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('activate');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('ActivationController', ActivationController);\n\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ActivationController ($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\n            vm.error = null;\n            vm.success = 'OK';\n        }).catch(function () {\n            vm.success = null;\n            vm.error = 'ERROR';\n        });\n\n        vm.login = LoginService.open;\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('account', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp', [\n            'ngStorage',\n            'tmh.dynamicLocale',\n            'pascalprecht.translate',\n            'ngResource',\n            'ngCookies',\n            'ngAria',\n            'ngCacheBuster',\n            'ngFileUpload',\n            'ui.bootstrap',\n            'ui.bootstrap.datetimepicker',\n            'ui.router',\n            'infinite-scroll',\n            // jhipster-needle-angularjs-add-module JHipster will add new module here\n            'angular-loading-bar'\n        ])\n        .run(run);\n\n    run.$inject = ['stateHandler', 'translationHandler'];\n\n    function run(stateHandler, translationHandler) {\n        stateHandler.initialize();\n        translationHandler.initialize();\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('User', User);\n\n    User.$inject = ['$resource'];\n\n    function User ($resource) {\n        var service = $resource('api/users/:login', {}, {\n            'query': {method: 'GET', isArray: true},\n            'get': {\n                method: 'GET',\n                transformResponse: function (data) {\n                    data = angular.fromJson(data);\n                    return data;\n                }\n            },\n            'save': { method:'POST' },\n            'update': { method:'PUT' },\n            'delete':{ method:'DELETE'}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('ProfileService', ProfileService);\n\n    ProfileService.$inject = ['$http'];\n\n    function ProfileService($http) {\n\n        var dataPromise;\n\n        var service = {\n            getProfileInfo : getProfileInfo\n        };\n\n        return service;\n\n        function getProfileInfo() {\n            if (angular.isUndefined(dataPromise)) {\n                dataPromise = $http.get('api/profile-info').then(function(result) {\n                    if (result.data.activeProfiles) {\n                        var response = {};\n                        response.activeProfiles = result.data.activeProfiles;\n                        response.ribbonEnv = result.data.ribbonEnv;\n                        response.inProduction = result.data.activeProfiles.indexOf(\"prod\") !== -1;\n                        response.swaggerEnabled = result.data.activeProfiles.indexOf(\"swagger\") !== -1;\n                        return response;\n                    }\n                });\n            }\n            return dataPromise;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('pageRibbon', pageRibbon);\n\n    pageRibbon.$inject = ['ProfileService', '$rootScope', '$translate'];\n\n    function pageRibbon(ProfileService, $rootScope, $translate) {\n        var directive = {\n            replace : true,\n            restrict : 'AE',\n            template : '<div class=\"ribbon hidden\"><a href=\"\" data-translate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>',\n            link : linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            ProfileService.getProfileInfo().then(function(response) {\n                if (response.ribbonEnv) {\n                    scope.ribbonEnv = response.ribbonEnv;\n                    element.addClass(response.ribbonEnv);\n                    element.removeClass('hidden');\n                }\n            });\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Register', Register);\n\n    Register.$inject = ['$resource'];\n\n    function Register ($resource) {\n        return $resource('api/register', {}, {});\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Principal', Principal);\n\n    Principal.$inject = ['$q', 'Account'];\n\n    function Principal ($q, Account) {\n        var _identity,\n            _authenticated = false;\n\n        var service = {\n            authenticate: authenticate,\n            hasAnyAuthority: hasAnyAuthority,\n            hasAuthority: hasAuthority,\n            identity: identity,\n            isAuthenticated: isAuthenticated,\n            isIdentityResolved: isIdentityResolved\n        };\n\n        return service;\n\n        function authenticate (identity) {\n            _identity = identity;\n            _authenticated = identity !== null;\n        }\n\n        function hasAnyAuthority (authorities) {\n            if (!_authenticated || !_identity || !_identity.authorities) {\n                return false;\n            }\n\n            for (var i = 0; i < authorities.length; i++) {\n                if (_identity.authorities.indexOf(authorities[i]) !== -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function hasAuthority (authority) {\n            if (!_authenticated) {\n                return $q.when(false);\n            }\n\n            return this.identity().then(function(_id) {\n                return _id.authorities && _id.authorities.indexOf(authority) !== -1;\n            }, function(){\n                return false;\n            });\n        }\n\n        function identity (force) {\n            var deferred = $q.defer();\n\n            if (force === true) {\n                _identity = undefined;\n            }\n\n            // check and see if we have retrieved the identity data from the server.\n            // if we have, reuse it by immediately resolving\n            if (angular.isDefined(_identity)) {\n                deferred.resolve(_identity);\n\n                return deferred.promise;\n            }\n\n            // retrieve the identity data from the server, update the identity object, and then resolve.\n            Account.get().$promise\n                .then(getAccountThen)\n                .catch(getAccountCatch);\n\n            return deferred.promise;\n\n            function getAccountThen (account) {\n                _identity = account.data;\n                _authenticated = true;\n                deferred.resolve(_identity);\n            }\n\n            function getAccountCatch () {\n                _identity = null;\n                _authenticated = false;\n                deferred.resolve(_identity);\n            }\n        }\n\n        function isAuthenticated () {\n            return _authenticated;\n        }\n\n        function isIdentityResolved () {\n            return angular.isDefined(_identity);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('PasswordResetInit', PasswordResetInit);\n\n    PasswordResetInit.$inject = ['$resource'];\n\n    function PasswordResetInit($resource) {\n        var service = $resource('api/account/reset_password/init', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('PasswordResetFinish', PasswordResetFinish);\n\n    PasswordResetFinish.$inject = ['$resource'];\n\n    function PasswordResetFinish($resource) {\n        var service = $resource('api/account/reset_password/finish', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Password', Password);\n\n    Password.$inject = ['$resource'];\n\n    function Password($resource) {\n        var service = $resource('api/account/change_password', {}, {});\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('hasAuthority', hasAuthority);\n\n    hasAuthority.$inject = ['Principal'];\n\n    function hasAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authority = attrs.hasAuthority.replace(/\\s+/g, '');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    Principal.hasAuthority(authority)\n                        .then(function (result) {\n                            if (result) {\n                                setVisible();\n                            } else {\n                                setHidden();\n                            }\n                        });\n                };\n\n            if (authority.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('hasAnyAuthority', hasAnyAuthority);\n\n    hasAnyAuthority.$inject = ['Principal'];\n\n    function hasAnyAuthority(Principal) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var authorities = attrs.hasAnyAuthority.replace(/\\s+/g, '').split(',');\n\n            var setVisible = function () {\n                    element.removeClass('hidden');\n                },\n                setHidden = function () {\n                    element.addClass('hidden');\n                },\n                defineVisibility = function (reset) {\n                    var result;\n                    if (reset) {\n                        setVisible();\n                    }\n\n                    result = Principal.hasAnyAuthority(authorities);\n                    if (result) {\n                        setVisible();\n                    } else {\n                        setHidden();\n                    }\n                };\n\n            if (authorities.length > 0) {\n                defineVisibility(true);\n\n                scope.$watch(function() {\n                    return Principal.isAuthenticated();\n                }, function() {\n                    defineVisibility(true);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Auth', Auth);\n\n    Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\n\n    function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\n        var service = {\n            activateAccount: activateAccount,\n            authorize: authorize,\n            changePassword: changePassword,\n            createAccount: createAccount,\n            getPreviousState: getPreviousState,\n            login: login,\n            logout: logout,\n            loginWithToken: loginWithToken,\n            resetPasswordFinish: resetPasswordFinish,\n            resetPasswordInit: resetPasswordInit,\n            resetPreviousState: resetPreviousState,\n            storePreviousState: storePreviousState,\n            updateAccount: updateAccount\n        };\n\n        return service;\n\n        function activateAccount (key, callback) {\n            var cb = callback || angular.noop;\n\n            return Activate.get(key,\n                function (response) {\n                    return cb(response);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function authorize (force) {\n            var authReturn = Principal.identity(force).then(authThen);\n\n            return authReturn;\n\n            function authThen () {\n                var isAuthenticated = Principal.isAuthenticated();\n\n                // an authenticated user can't access to login and register pages\n                if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register' || $rootScope.toState.name === 'social-auth')) {\n                    $state.go('home');\n                }\n\n                // recover and clear previousState after external login redirect (e.g. oauth2)\n                if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                    var previousState = getPreviousState();\n                    resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n\n                if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                    if (isAuthenticated) {\n                        // user is signed in but not authorized for desired state\n                        $state.go('accessdenied');\n                    }\n                    else {\n                        // user is not authenticated. stow the state they wanted before you\n                        // send them to the login service, so you can return them when you're done\n                        storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                        // now, send them to the signin state so they can log in\n                        $state.go('accessdenied').then(function() {\n                            LoginService.open();\n                        });\n                    }\n                }\n            }\n        }\n\n        function changePassword (newPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return Password.save(newPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function createAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Register.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    this.logout();\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function login (credentials, callback) {\n            var cb = callback || angular.noop;\n            var deferred = $q.defer();\n\n            AuthServerProvider.login(credentials)\n                .then(loginThen)\n                .catch(function (err) {\n                    this.logout();\n                    deferred.reject(err);\n                    return cb(err);\n                }.bind(this));\n\n            function loginThen (data) {\n                Principal.identity(true).then(function(account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account!== null) {\n                        $translate.use(account.langKey).then(function () {\n                            $translate.refresh();\n                        });\n                    }\n                    deferred.resolve(data);\n                });\n                return cb();\n            }\n\n            return deferred.promise;\n        }\n\n        function loginWithToken(jwt, rememberMe) {\n            return AuthServerProvider.loginWithToken(jwt, rememberMe);\n        }\n\n        function logout () {\n            AuthServerProvider.logout();\n            Principal.authenticate(null);\n        }\n\n        function resetPasswordFinish (keyAndPassword, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetFinish.save(keyAndPassword, function () {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function resetPasswordInit (mail, callback) {\n            var cb = callback || angular.noop;\n\n            return PasswordResetInit.save(mail, function() {\n                return cb();\n            }, function (err) {\n                return cb(err);\n            }).$promise;\n        }\n\n        function updateAccount (account, callback) {\n            var cb = callback || angular.noop;\n\n            return Account.save(account,\n                function () {\n                    return cb(account);\n                },\n                function (err) {\n                    return cb(err);\n                }.bind(this)).$promise;\n        }\n\n        function getPreviousState() {\n            var previousState = $sessionStorage.previousState;\n            return previousState;\n        }\n\n        function resetPreviousState() {\n            delete $sessionStorage.previousState;\n        }\n\n        function storePreviousState(previousStateName, previousStateParams) {\n            var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n            $sessionStorage.previousState = previousState;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('AuthServerProvider', AuthServerProvider);\n\n    AuthServerProvider.$inject = ['$http', '$localStorage', '$sessionStorage', '$q'];\n\n    function AuthServerProvider ($http, $localStorage, $sessionStorage, $q) {\n        var service = {\n            getToken: getToken,\n            login: login,\n            loginWithToken: loginWithToken,\n            storeAuthenticationToken: storeAuthenticationToken,\n            logout: logout\n        };\n\n        return service;\n\n        function getToken () {\n            return $localStorage.authenticationToken || $sessionStorage.authenticationToken;\n        }\n\n        function login (credentials) {\n\n            var data = {\n                username: credentials.username,\n                password: credentials.password,\n                rememberMe: credentials.rememberMe\n            };\n            return $http.post('api/authenticate', data).success(authenticateSuccess);\n\n            function authenticateSuccess (data, status, headers) {\n                var bearerToken = headers('Authorization');\n                if (angular.isDefined(bearerToken) && bearerToken.slice(0, 7) === 'Bearer ') {\n                    var jwt = bearerToken.slice(7, bearerToken.length);\n                    service.storeAuthenticationToken(jwt, credentials.rememberMe);\n                    return jwt;\n                }\n            }\n        }\n\n        function loginWithToken(jwt, rememberMe) {\n            var deferred = $q.defer();\n\n            if (angular.isDefined(jwt)) {\n                this.storeAuthenticationToken(jwt, rememberMe);\n                deferred.resolve(jwt);\n            } else {\n                deferred.reject();\n            }\n\n            return deferred.promise;\n        }\n\n        function storeAuthenticationToken(jwt, rememberMe) {\n            if(rememberMe){\n                $localStorage.authenticationToken = jwt;\n            } else {\n                $sessionStorage.authenticationToken = jwt;\n            }\n        }\n\n        function logout () {\n            delete $localStorage.authenticationToken;\n            delete $sessionStorage.authenticationToken;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Activate', Activate);\n\n    Activate.$inject = ['$resource'];\n\n    function Activate ($resource) {\n        var service = $resource('api/activate', {}, {\n            'get': { method: 'GET', params: {}, isArray: false}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Account', Account);\n\n    Account.$inject = ['$resource'];\n\n    function Account ($resource) {\n        var service = $resource('api/account', {}, {\n            'get': { method: 'GET', params: {}, isArray: false,\n                interceptor: {\n                    response: function(response) {\n                        // expose response\n                        return response;\n                    }\n                }\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('NavbarController', NavbarController);\n\n    NavbarController.$inject = ['$state', 'Auth', 'Principal', 'ProfileService', 'LoginService'];\n\n    function NavbarController ($state, Auth, Principal, ProfileService, LoginService) {\n        var vm = this;\n\n        vm.isNavbarCollapsed = true;\n        vm.isAuthenticated = Principal.isAuthenticated;\n\n        ProfileService.getProfileInfo().then(function(response) {\n            vm.inProduction = response.inProduction;\n            vm.swaggerEnabled = response.swaggerEnabled;\n        });\n\n        vm.login = login;\n        vm.logout = logout;\n        vm.toggleNavbar = toggleNavbar;\n        vm.collapseNavbar = collapseNavbar;\n        vm.$state = $state;\n\n        function login() {\n            collapseNavbar();\n            LoginService.open();\n        }\n\n        function logout() {\n            collapseNavbar();\n            Auth.logout();\n            $state.go('home');\n        }\n\n        function toggleNavbar() {\n            vm.isNavbarCollapsed = !vm.isNavbarCollapsed;\n        }\n\n        function collapseNavbar() {\n            vm.isNavbarCollapsed = true;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('activeMenu', activeMenu);\n\n    activeMenu.$inject = ['$translate', '$locale', 'tmhDynamicLocale'];\n\n    function activeMenu($translate, $locale, tmhDynamicLocale) {\n        var directive = {\n            restrict: 'A',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs) {\n            var language = attrs.activeMenu;\n\n            scope.$watch(function() {\n                return $translate.use();\n            }, function(selectedLanguage) {\n                if (language === selectedLanguage) {\n                    tmhDynamicLocale.set(language);\n                    element.addClass('active');\n                } else {\n                    element.removeClass('active');\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n            .state('error', {\n                parent: 'app',\n                url: '/error',\n                data: {\n                    authorities: [],\n                    pageTitle: 'error.title'\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/error.html'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            })\n            .state('accessdenied', {\n                parent: 'app',\n                url: '/accessdenied',\n                data: {\n                    authorities: []\n                },\n                views: {\n                    'content@': {\n                        templateUrl: 'app/layouts/error/accessdenied.html'\n                    }\n                },\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('error');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('home', {\n            parent: 'app',\n            url: '/',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/home/home.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {\n                    $translatePartialLoader.addPart('home');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('HomeController', HomeController);\n\n    HomeController.$inject = ['$scope', 'Principal', 'LoginService', '$state'];\n\n    function HomeController ($scope, Principal, LoginService, $state) {\n        var vm = this;\n\n        vm.account = null;\n        vm.isAuthenticated = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        $scope.$on('authenticationSuccess', function() {\n            getAccount();\n        });\n\n        getAccount();\n\n        function getAccount() {\n            Principal.identity().then(function(account) {\n                vm.account = account;\n                vm.isAuthenticated = Principal.isAuthenticated;\n            });\n        }\n        function register () {\n            $state.go('register');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('entity', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .filter('words', words);\n\n    function words() {\n        return wordsFilter;\n\n        function wordsFilter(input, words) {\n            if (isNaN(words)) {\n                return input;\n            }\n            if (words <= 0) {\n                return '';\n            }\n            if (input) {\n                var inputWords = input.split(/\\s+/);\n                if (inputWords.length > words) {\n                    input = inputWords.slice(0, words).join(' ') + '...';\n                }\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .filter('characters', characters);\n\n    function characters () {\n        return charactersFilter;\n\n        function charactersFilter(input, chars, breakOnWord) {\n            if (isNaN(chars)) {\n                return input;\n            }\n            if (chars <= 0) {\n                return '';\n            }\n            if (input && input.length > chars) {\n                input = input.substring(0, chars);\n\n                if (!breakOnWord) {\n                    var lastspace = input.lastIndexOf(' ');\n                    // Get last space\n                    if (lastspace !== -1) {\n                        input = input.substr(0, lastspace);\n                    }\n                } else {\n                    while (input.charAt(input.length-1) === ' ') {\n                        input = input.substr(0, input.length - 1);\n                    }\n                }\n                return input + '...';\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('jhSortBy', jhSortBy);\n\n    function jhSortBy() {\n        var directive = {\n            restrict: 'A',\n            scope: false,\n            require: '^jhSort',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc(scope, element, attrs, parentCtrl) {\n            element.bind('click', function () {\n                parentCtrl.sort(attrs.jhSortBy);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('jhSort', jhSort);\n\n    function jhSort () {\n        var directive = {\n            restrict: 'A',\n            scope: {\n                predicate: '=jhSort',\n                ascending: '=',\n                callback: '&'\n            },\n            controller: SortController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n    }\n\n    SortController.$inject = ['$scope', '$element'];\n\n    function SortController ($scope, $element) {\n        var vm = this;\n\n        vm.applyClass = applyClass;\n        vm.resetClasses = resetClasses;\n        vm.sort = sort;\n        vm.triggerApply = triggerApply;\n\n        $scope.$watchGroup(['vm.predicate', 'vm.ascending'], vm.triggerApply);\n        vm.triggerApply();\n\n        function applyClass (element) {\n            var thisIcon = element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt',\n                remove = sortIcon + ' ' + sortDesc,\n                add = sortAsc;\n            if (!vm.ascending) {\n                remove = sortIcon + ' ' + sortAsc;\n                add = sortDesc;\n            }\n            vm.resetClasses();\n            thisIcon.removeClass(remove);\n            thisIcon.addClass(add);\n        }\n\n        function resetClasses () {\n            var allThIcons = $element.find('span.glyphicon'),\n                sortIcon = 'glyphicon-sort',\n                sortAsc = 'glyphicon-sort-by-attributes',\n                sortDesc = 'glyphicon-sort-by-attributes-alt';\n            allThIcons.removeClass(sortAsc + ' ' + sortDesc);\n            allThIcons.addClass(sortIcon);\n        }\n\n        function sort (field) {\n            if (field !== vm.predicate) {\n                vm.ascending = true;\n            } else {\n                vm.ascending = !vm.ascending;\n            }\n            vm.predicate = field;\n            $scope.$apply();\n            vm.callback();\n        }\n\n        function triggerApply (values)  {\n            vm.resetClasses();\n            if (values && values[0] !== '_score') {\n                vm.applyClass($element.find('th[jh-sort-by=\\'' + values[0] + '\\']'));\n            }\n        }\n    }\n})();\n\n(function(){\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('ParseLinks', ParseLinks);\n\n    function ParseLinks () {\n\n        var service = {\n            parse : parse\n        };\n\n        return service;\n\n        function parse(header) {\n            if (header.length === 0) {\n                throw new Error('input must not be of zero length');\n            }\n\n            // Split parts by comma\n            var parts = header.split(',');\n            var links = {};\n            // Parse each part into a named link\n            angular.forEach(parts, function(p) {\n                var section = p.split('>;');\n                if (section.length !== 2) {\n                    throw new Error('section could not be split on \">;\"');\n                }\n                var url = section[0].replace(/<(.*)/, '$1').trim();\n                var queryString = {};\n                url.replace(\n                    new RegExp('([^?=&]+)(=([^&]*))?', 'g'),\n                    function($0, $1, $2, $3) { queryString[$1] = $3; }\n                );\n                var page = queryString.page;\n                if (angular.isString(page)) {\n                    page = parseInt(page);\n                }\n                var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n                links[name] = page;\n            });\n            return links;\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('PaginationUtil', PaginationUtil);\n\n    function PaginationUtil () {\n\n        var service = {\n            parseAscending : parseAscending,\n            parsePage : parsePage,\n            parsePredicate : parsePredicate\n        };\n\n        return service;\n\n        function parseAscending (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                return sort.split(',').slice(-1)[0] === 'asc';\n            } else {\n                // default to true if no sort defined\n                return true;\n            }\n        }\n\n        // query params are strings, and need to be parsed\n        function parsePage (page) {\n            return parseInt(page);\n        }\n\n        // sort can be in the format `id,asc` or `id`\n        function parsePredicate (sort) {\n            var sortArray = sort.split(',');\n            if (sortArray.length > 1){\n                sortArray.pop();\n            }\n            return sortArray.join(',');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    var jhiItemCount = {\n        template: '<div class=\"info\">' +\n                    'Showing {{(($ctrl.page - 1) * $ctrl.itemsPerPage) == 0 ? 1 : (($ctrl.page - 1) * $ctrl.itemsPerPage + 1)}} - ' +\n                    '{{($ctrl.page * $ctrl.itemsPerPage) < $ctrl.queryCount ? ($ctrl.page * $ctrl.itemsPerPage) : $ctrl.queryCount}} ' +\n                    'of {{$ctrl.queryCount}} items.' +\n                '</div>',\n        bindings: {\n            page: '<',\n            queryCount: '<total',\n            itemsPerPage: '<'\n        }\n    };\n\n    angular\n        .module('coocotteApp')\n        .component('jhiItemCount', jhiItemCount);\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('DateUtils', DateUtils);\n\n    DateUtils.$inject = ['$filter'];\n\n    function DateUtils($filter) {\n\n        var service = {\n            convertDateTimeFromServer: convertDateTimeFromServer,\n            convertLocalDateFromServer: convertLocalDateFromServer,\n            convertLocalDateToServer: convertLocalDateToServer,\n            dateformat: dateformat\n        };\n\n        return service;\n\n        function convertDateTimeFromServer(date) {\n            if (date) {\n                return new Date(date);\n            } else {\n                return null;\n            }\n        }\n\n        function convertLocalDateFromServer(date) {\n            if (date) {\n                var dateString = date.split('-');\n                return new Date(dateString[0], dateString[1] - 1, dateString[2]);\n            }\n            return null;\n        }\n\n        function convertLocalDateToServer(date) {\n            if (date) {\n                return $filter('date')(date, 'yyyy-MM-dd');\n            } else {\n                return null;\n            }\n        }\n\n        function dateformat() {\n            return 'yyyy-MM-dd';\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('DataUtils', DataUtils);\n\n    DataUtils.$inject = ['$window'];\n\n    function DataUtils ($window) {\n\n        var service = {\n            abbreviate: abbreviate,\n            byteSize: byteSize,\n            openFile: openFile,\n            toBase64: toBase64\n        };\n\n        return service;\n\n        function abbreviate (text) {\n            if (!angular.isString(text)) {\n                return '';\n            }\n            if (text.length < 30) {\n                return text;\n            }\n            return text ? (text.substring(0, 15) + '...' + text.slice(-10)) : '';\n        }\n\n        function byteSize (base64String) {\n            if (!angular.isString(base64String)) {\n                return '';\n            }\n\n            function endsWith(suffix, str) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function paddingSize(base64String) {\n                if (endsWith('==', base64String)) {\n                    return 2;\n                }\n                if (endsWith('=', base64String)) {\n                    return 1;\n                }\n                return 0;\n            }\n\n            function size(base64String) {\n                return base64String.length / 4 * 3 - paddingSize(base64String);\n            }\n\n            function formatAsBytes(size) {\n                return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n            }\n\n            return formatAsBytes(size(base64String));\n        }\n\n        function openFile (type, data) {\n            $window.open('data:' + type + ';base64,' + data, '_blank', 'height=300,width=400');\n        }\n\n        function toBase64 (file, cb) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function (e) {\n                var base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n                cb(base64Data);\n            };\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .filter('capitalize', capitalize);\n\n    function capitalize() {\n        return capitalizeFilter;\n\n        function capitalizeFilter (input) {\n            if (input !== null) {\n                input = input.toLowerCase();\n                input = input.substring(0, 1).toUpperCase() + input.substring(1);\n            }\n            return input;\n        }\n    }\n})();\n\n(function() {\n    /*jshint bitwise: false*/\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('Base64', Base64);\n\n    function Base64 () {\n        var keyStr = 'ABCDEFGHIJKLMNOP' +\n            'QRSTUVWXYZabcdef' +\n            'ghijklmnopqrstuv' +\n            'wxyz0123456789+/' +\n            '=';\n\n        var service = {\n            decode : decode,\n            encode : encode\n        };\n\n        return service;\n\n        function encode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n            }\n\n            return output;\n        }\n\n        function decode (input) {\n            var output = '',\n                chr1, chr2, chr3,\n                enc1, enc2, enc3, enc4,\n                i = 0;\n\n            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n            while (i < input.length) {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 !== 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 !== 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n            }\n\n            return output;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('LoginService', LoginService);\n\n    LoginService.$inject = ['$uibModal'];\n\n    function LoginService ($uibModal) {\n        var service = {\n            open: open\n        };\n\n        var modalInstance = null;\n        var resetModal = function () {\n            modalInstance = null;\n        };\n\n        return service;\n\n        function open () {\n            if (modalInstance !== null) return;\n            modalInstance = $uibModal.open({\n                animation: true,\n                templateUrl: 'app/components/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                resolve: {\n                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                        $translatePartialLoader.addPart('login');\n                        return $translate.refresh();\n                    }]\n                }\n            });\n            modalInstance.result.then(\n                resetModal,\n                resetModal\n            );\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\n\n    function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\n        var vm = this;\n\n        vm.authenticationError = false;\n        vm.cancel = cancel;\n        vm.credentials = {};\n        vm.login = login;\n        vm.password = null;\n        vm.register = register;\n        vm.rememberMe = true;\n        vm.requestResetPassword = requestResetPassword;\n        vm.username = null;\n\n        $timeout(function (){angular.element('#username').focus();});\n\n        function cancel () {\n            vm.credentials = {\n                username: null,\n                password: null,\n                rememberMe: true\n            };\n            vm.authenticationError = false;\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function login (event) {\n            event.preventDefault();\n            Auth.login({\n                username: vm.username,\n                password: vm.password,\n                rememberMe: vm.rememberMe\n            }).then(function () {\n                vm.authenticationError = false;\n                $uibModalInstance.close();\n                if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                    $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\n                    $state.go('home');\n                }\n\n                $rootScope.$broadcast('authenticationSuccess');\n\n                // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n                // since login is successful, go to stored previousState and clear previousState\n                if (Auth.getPreviousState()) {\n                    var previousState = Auth.getPreviousState();\n                    Auth.resetPreviousState();\n                    $state.go(previousState.name, previousState.params);\n                }\n            }).catch(function () {\n                vm.authenticationError = true;\n            });\n        }\n\n        function register () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('register');\n        }\n\n        function requestResetPassword () {\n            $uibModalInstance.dismiss('cancel');\n            $state.go('requestReset');\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('JhiLanguageService', JhiLanguageService);\n\n    JhiLanguageService.$inject = ['$q', '$http', '$translate', 'LANGUAGES'];\n\n    function JhiLanguageService ($q, $http, $translate, LANGUAGES) {\n        var service = {\n            getAll: getAll,\n            getCurrent: getCurrent\n        };\n\n        return service;\n\n        function getAll () {\n            var deferred = $q.defer();\n            deferred.resolve(LANGUAGES);\n            return deferred.promise;\n        }\n\n        function getCurrent () {\n            var deferred = $q.defer();\n            var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n\n            deferred.resolve(language);\n\n            return deferred.promise;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .filter('findLanguageFromKey', findLanguageFromKey);\n\n    function findLanguageFromKey() {\n        return findLanguageFromKeyFilter;\n\n        function findLanguageFromKeyFilter(lang) {\n            return {\n                'ca': 'Català',\n                'cs': 'Český',\n                'da': 'Dansk',\n                'de': 'Deutsch',\n                'el': 'Ελληνικά',\n                'en': 'English',\n                'es': 'Español',\n                'et': 'Eesti',\n                'fr': 'Français',\n                'gl': 'Galego',\n                'hu': 'Magyar',\n                'hi': 'हिंदी',\n                'hy': 'Հայերեն',\n                'it': 'Italiano',\n                'ja': '日本語',\n                'ko': '한국어',\n                'mr': 'मराठी',\n                'nl': 'Nederlands',\n                'pl': 'Polski',\n                'pt-br': 'Português (Brasil)',\n                'pt-pt': 'Português',\n                'ro': 'Română',\n                'ru': 'Русский',\n                'sk': 'Slovenský',\n                'sr': 'Srpski',\n                'sv': 'Svenska',\n                'ta': 'தமிழ்',\n                'th': 'ไทย',\n                'tr': 'Türkçe',\n                'vi': 'Tiếng Việt',\n                'zh-cn': '中文（简体）',\n                'zh-tw': '繁體中文'\n            }[lang];\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiLanguageController', JhiLanguageController);\n\n    JhiLanguageController.$inject = ['$translate', 'JhiLanguageService', 'tmhDynamicLocale'];\n\n    function JhiLanguageController ($translate, JhiLanguageService, tmhDynamicLocale) {\n        var vm = this;\n\n        vm.changeLanguage = changeLanguage;\n        vm.languages = null;\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function changeLanguage (languageKey) {\n            $translate.use(languageKey);\n            tmhDynamicLocale.set(languageKey);\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n\n        /*\n         Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n         They are written in English to avoid character encoding issues (not a perfect solution)\n         */\n        .constant('LANGUAGES', [\n            'fr'\n            // jhipster-needle-i18n-language-constant - JHipster will add/remove languages in this array\n        ]\n    );\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('showValidation', showValidation);\n\n    function showValidation () {\n        var directive = {\n            restrict: 'A',\n            require: 'form',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, formCtrl) {\n            element.find('.form-group').each(function() {\n                var $formGroup = angular.element(this);\n                var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');\n\n                if ($inputs.length > 0) {\n                    $inputs.each(function() {\n                        var $input = angular.element(this);\n                        var inputName = $input.attr('name');\n                        scope.$watch(function() {\n                            return formCtrl[inputName].$invalid && formCtrl[inputName].$dirty;\n                        }, function(isInvalid) {\n                            $formGroup.toggleClass('has-error', isInvalid);\n                        });\n                    });\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .constant('paginationConstants', {\n            'itemsPerPage': 20\n        });\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('minbytes', minbytes);\n\n    function minbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.minbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('maxbytes', maxbytes);\n\n    function maxbytes () {\n        var directive = {\n            restrict: 'A',\n            require: '?ngModel',\n            link: linkFunc\n        };\n\n        return directive;\n\n        function linkFunc (scope, element, attrs, ngModel) {\n            if (!ngModel) {\n                return;\n            }\n\n            ngModel.$validators.maxbytes = function (modelValue) {\n                return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;\n            };\n        }\n\n        function endsWith(suffix, str) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function paddingSize(base64String) {\n            if (endsWith('==', base64String)) {\n                return 2;\n            }\n            if (endsWith('=', base64String)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        function numberOfBytes(base64String) {\n            return base64String.length / 4 * 3 - paddingSize(base64String);\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    var jhiAlertError = {\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertErrorController\n    };\n\n    angular\n        .module('coocotteApp')\n        .component('jhiAlertError', jhiAlertError);\n\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\n\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\n        var vm = this;\n\n        vm.alerts = [];\n\n        function addErrorAlert (message, key, data) {\n            key = key ? key : message;\n            vm.alerts.push(\n                AlertService.add(\n                    {\n                        type: 'danger',\n                        msg: key,\n                        params: data,\n                        timeout: 5000,\n                        toast: AlertService.isToast(),\n                        scoped: true\n                    },\n                    vm.alerts\n                )\n            );\n        }\n\n        var cleanHttpErrorListener = $rootScope.$on('coocotteApp.httpError', function (event, httpResponse) {\n            var i;\n            event.stopPropagation();\n            switch (httpResponse.status) {\n            // connection refused, server not reachable\n            case 0:\n                addErrorAlert('Server not reachable','error.server.not.reachable');\n                break;\n\n            case 400:\n                var headers = Object.keys(httpResponse.headers()).filter(function (header) {\n                    return header.indexOf('app-error', header.length - 'app-error'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\n                }).sort();\n                var errorHeader = httpResponse.headers(headers[0]);\n                var entityKey = httpResponse.headers(headers[1]);\n                if (errorHeader) {\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n                        var fieldError = httpResponse.data.fieldErrors[i];\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                        var fieldName = $translate.instant('coocotteApp.' + fieldError.objectName + '.' + convertedField);\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\n                    }\n                } else if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n                } else {\n                    addErrorAlert(httpResponse.data);\n                }\n                break;\n\n            case 404:\n                addErrorAlert('Not found','error.url.not.found');\n                break;\n\n            default:\n                if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message);\n                } else {\n                    addErrorAlert(angular.toJson(httpResponse));\n                }\n            }\n        });\n\n        $scope.$on('$destroy', function () {\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\n                cleanHttpErrorListener();\n                vm.alerts = [];\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .provider('AlertService', AlertService);\n\n    function AlertService () {\n        this.toast = false;\n        /*jshint validthis: true */\n        this.$get = getService;\n\n        this.showAsToast = function(isToast) {\n            this.toast = isToast;\n        };\n\n        getService.$inject = ['$timeout', '$sce', '$translate'];\n\n        function getService ($timeout, $sce,$translate) {\n            var toast = this.toast,\n                alertId = 0, // unique id for each alert. Starts from 0.\n                alerts = [],\n                timeout = 5000; // default timeout\n\n            return {\n                factory: factory,\n                isToast: isToast,\n                add: addAlert,\n                closeAlert: closeAlert,\n                closeAlertByIndex: closeAlertByIndex,\n                clear: clear,\n                get: get,\n                success: success,\n                error: error,\n                info: info,\n                warning : warning\n            };\n\n            function isToast() {\n                return toast;\n            }\n\n            function clear() {\n                alerts = [];\n            }\n\n            function get() {\n                return alerts;\n            }\n\n            function success(msg, params, position) {\n                return this.add({\n                    type: 'success',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function error(msg, params, position) {\n                return this.add({\n                    type: 'danger',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function warning(msg, params, position) {\n                return this.add({\n                    type: 'warning',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function info(msg, params, position) {\n                return this.add({\n                    type: 'info',\n                    msg: msg,\n                    params: params,\n                    timeout: timeout,\n                    toast: toast,\n                    position: position\n                });\n            }\n\n            function factory(alertOptions) {\n                var alert = {\n                    type: alertOptions.type,\n                    msg: $sce.trustAsHtml(alertOptions.msg),\n                    id: alertOptions.alertId,\n                    timeout: alertOptions.timeout,\n                    toast: alertOptions.toast,\n                    position: alertOptions.position ? alertOptions.position : 'top right',\n                    scoped: alertOptions.scoped,\n                    close: function (alerts) {\n                        return closeAlert(this.id, alerts);\n                    }\n                };\n                if(!alert.scoped) {\n                    alerts.push(alert);\n                }\n                return alert;\n            }\n\n            function addAlert(alertOptions, extAlerts) {\n                alertOptions.alertId = alertId++;\n                alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);\n                var that = this;\n                var alert = this.factory(alertOptions);\n                if (alertOptions.timeout && alertOptions.timeout > 0) {\n                    $timeout(function () {\n                        that.closeAlert(alertOptions.alertId, extAlerts);\n                    }, alertOptions.timeout);\n                }\n                return alert;\n            }\n\n            function closeAlert(id, extAlerts) {\n                var thisAlerts = extAlerts ? extAlerts : alerts;\n                return closeAlertByIndex(thisAlerts.map(function(e) { return e.id; }).indexOf(id), thisAlerts);\n            }\n\n            function closeAlertByIndex(index, thisAlerts) {\n                return thisAlerts.splice(index, 1);\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    var jhiAlert = {\n        template: '<div class=\"alerts\" ng-cloak=\"\" role=\"alert\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre ng-bind-html=\"alert.msg\"></pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertController\n    };\n\n    angular\n        .module('coocotteApp')\n        .component('jhiAlert', jhiAlert);\n\n    jhiAlertController.$inject = ['$scope', 'AlertService'];\n\n    function jhiAlertController($scope, AlertService) {\n        var vm = this;\n\n        vm.alerts = AlertService.get();\n        $scope.$on('$destroy', function () {\n            vm.alerts = [];\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('notificationInterceptor', notificationInterceptor);\n\n    notificationInterceptor.$inject = ['$q', 'AlertService'];\n\n    function notificationInterceptor ($q, AlertService) {\n        var service = {\n            response: response\n        };\n\n        return service;\n\n        function response (response) {\n            var headers = Object.keys(response.headers()).filter(function (header) {\n                return header.indexOf('app-alert', header.length - 'app-alert'.length) !== -1 || header.indexOf('app-params', header.length - 'app-params'.length) !== -1;\n            }).sort();\n            var alertKey = response.headers(headers[0]);\n            if (angular.isString(alertKey)) {\n                AlertService.success(alertKey, { param : response.headers(headers[1])});\n            }\n            return response;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('errorHandlerInterceptor', errorHandlerInterceptor);\n\n    errorHandlerInterceptor.$inject = ['$q', '$rootScope'];\n\n    function errorHandlerInterceptor ($q, $rootScope) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError (response) {\n            if (!(response.status === 401 && (response.data === '' || (response.data.path && response.data.path.indexOf('/api/account') === 0 )))) {\n                $rootScope.$emit('coocotteApp.httpError', response);\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('authExpiredInterceptor', authExpiredInterceptor);\n\n    authExpiredInterceptor.$inject = ['$rootScope', '$q', '$injector', '$localStorage', '$sessionStorage'];\n\n    function authExpiredInterceptor($rootScope, $q, $injector, $localStorage, $sessionStorage) {\n        var service = {\n            responseError: responseError\n        };\n\n        return service;\n\n        function responseError(response) {\n            if (response.status === 401) {\n                delete $localStorage.authenticationToken;\n                delete $sessionStorage.authenticationToken;\n                var Principal = $injector.get('Principal');\n                if (Principal.isAuthenticated()) {\n                    var Auth = $injector.get('Auth');\n                    Auth.authorize(true);\n                }\n            }\n            return $q.reject(response);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('authInterceptor', authInterceptor);\n\n    authInterceptor.$inject = ['$rootScope', '$q', '$location', '$localStorage', '$sessionStorage'];\n\n    function authInterceptor ($rootScope, $q, $location, $localStorage, $sessionStorage) {\n        var service = {\n            request: request\n        };\n\n        return service;\n\n        function request (config) {\n            /*jshint camelcase: false */\n            config.headers = config.headers || {};\n            var token = $localStorage.authenticationToken || $sessionStorage.authenticationToken;\n            if (token) {\n                config.headers.Authorization = 'Bearer ' + token;\n            }\n            return config;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('translationHandler', translationHandler);\n\n    translationHandler.$inject = ['$rootScope', '$window', '$state', '$translate'];\n\n    function translationHandler($rootScope, $window, $state, $translate) {\n        return {\n            initialize: initialize,\n            updateTitle: updateTitle\n        };\n\n        function initialize() {\n            // if the current translation changes, update the window title\n            var translateChangeSuccess = $rootScope.$on('$translateChangeSuccess', function() {\n                updateTitle();\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(translateChangeSuccess) && translateChangeSuccess !== null){\n                    translateChangeSuccess();\n                }\n            });\n        }\n\n        // update the window title using params in the following\n        // precedence\n        // 1. titleKey parameter\n        // 2. $state.$current.data.pageTitle (current state page title)\n        // 3. 'global.title'\n        function updateTitle(titleKey) {\n            if (!titleKey && $state.$current.data && $state.$current.data.pageTitle) {\n                titleKey = $state.$current.data.pageTitle;\n            }\n            $translate(titleKey || 'global.title').then(function (title) {\n                $window.document.title = title;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('stateHandler', stateHandler);\n\n    stateHandler.$inject = ['$rootScope', '$state', '$sessionStorage', '$translate', 'JhiLanguageService', 'translationHandler', '$window',\n        'Auth', 'Principal', 'VERSION'];\n\n    function stateHandler($rootScope, $state, $sessionStorage, $translate, JhiLanguageService, translationHandler, $window,\n        Auth, Principal, VERSION) {\n        return {\n            initialize: initialize\n        };\n\n        function initialize() {\n            $rootScope.VERSION = VERSION;\n\n            var stateChangeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams, fromState) {\n                $rootScope.toState = toState;\n                $rootScope.toStateParams = toStateParams;\n                $rootScope.fromState = fromState;\n\n                // Redirect to a state with an external URL (http://stackoverflow.com/a/30221248/1098564)\n                if (toState.external) {\n                    event.preventDefault();\n                    $window.open(toState.url, '_self');\n                }\n\n                if (Principal.isIdentityResolved()) {\n                    Auth.authorize();\n                }\n\n                // Update the language\n                JhiLanguageService.getCurrent().then(function (language) {\n                    $translate.use(language);\n                });\n            });\n\n            var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {\n                var titleKey = 'global.title' ;\n\n                // Set the page title key to the one configured in state or use default one\n                if (toState.data.pageTitle) {\n                    titleKey = toState.data.pageTitle;\n                }\n                translationHandler.updateTitle(titleKey);\n            });\n\n            $rootScope.$on('$destroy', function () {\n                if(angular.isDefined(stateChangeStart) && stateChangeStart !== null){\n                    stateChangeStart();\n                }\n                if(angular.isDefined(stateChangeSuccess) && stateChangeSuccess !== null){\n                    stateChangeSuccess();\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(paginationConfig);\n\n    paginationConfig.$inject = ['uibPaginationConfig', 'paginationConstants'];\n\n    function paginationConfig(uibPaginationConfig, paginationConstants) {\n        uibPaginationConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPaginationConfig.maxSize = 5;\n        uibPaginationConfig.boundaryLinks = true;\n        uibPaginationConfig.firstText = '«';\n        uibPaginationConfig.previousText = '‹';\n        uibPaginationConfig.nextText = '›';\n        uibPaginationConfig.lastText = '»';\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(pagerConfig);\n\n    pagerConfig.$inject = ['uibPagerConfig', 'paginationConstants'];\n\n    function pagerConfig(uibPagerConfig, paginationConstants) {\n        uibPagerConfig.itemsPerPage = paginationConstants.itemsPerPage;\n        uibPagerConfig.previousText = '«';\n        uibPagerConfig.nextText = '»';\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('translationStorageProvider', translationStorageProvider);\n\n    translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n    function translationStorageProvider($cookies, $log, LANGUAGES) {\n        return {\n            get: get,\n            put: put\n        };\n\n        function get(name) {\n            if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n                $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to preferred language \"fr\"');\n                $cookies.putObject(name, 'fr');\n            }\n            return $cookies.getObject(name);\n        }\n\n        function put(name, value) {\n            $cookies.putObject(name, value);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(translationConfig);\n\n    translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n    function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n        // Initialize angular-translate\n        $translateProvider.useLoader('$translatePartialLoader', {\n            urlTemplate: 'i18n/{lang}/{part}.json'\n        });\n\n        $translateProvider.preferredLanguage('fr');\n        $translateProvider.useStorage('translationStorageProvider');\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n        tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n        tmhDynamicLocaleProvider.useCookieStorage();\n        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(localStorageConfig);\n\n    localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n    function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n        $localStorageProvider.setKeyPrefix('jhi-');\n        $sessionStorageProvider.setKeyPrefix('jhi-');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(httpConfig);\n\n    httpConfig.$inject = ['$urlRouterProvider', '$httpProvider', 'httpRequestInterceptorCacheBusterProvider', '$urlMatcherFactoryProvider'];\n\n    function httpConfig($urlRouterProvider, $httpProvider, httpRequestInterceptorCacheBusterProvider, $urlMatcherFactoryProvider) {\n        //Cache everything except rest api requests\n        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $httpProvider.interceptors.push('errorHandlerInterceptor');\n        $httpProvider.interceptors.push('authExpiredInterceptor');\n        $httpProvider.interceptors.push('authInterceptor');\n        $httpProvider.interceptors.push('notificationInterceptor');\n        // jhipster-needle-angularjs-add-interceptor JHipster will add new application http interceptor here\n\n        $urlMatcherFactoryProvider.type('boolean', {\n            name : 'boolean',\n            decode: function(val) { return val === true || val === 'true'; },\n            encode: function(val) { return val ? 1 : 0; },\n            equals: function(a, b) { return this.is(a) && a === b; },\n            is: function(val) { return [true,false,0,1].indexOf(val) >= 0; },\n            pattern: /bool|true|0|1/\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(compileServiceConfig);\n\n    compileServiceConfig.$inject = ['$compileProvider','DEBUG_INFO_ENABLED'];\n\n    function compileServiceConfig($compileProvider,DEBUG_INFO_ENABLED) {\n        // disable debug data on prod profile to improve performance\n        $compileProvider.debugInfoEnabled(DEBUG_INFO_ENABLED);\n\n        /*\n        If you wish to debug an application with this information\n        then you should open up a debug console in the browser\n        then call this method directly in this console:\n\n\t\tangular.reloadWithDebugInfo();\n\t\t*/\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(alertServiceConfig);\n\n    alertServiceConfig.$inject = ['AlertServiceProvider'];\n\n    function alertServiceConfig(AlertServiceProvider) {\n        // set below to true to make alerts look like toast\n        AlertServiceProvider.showAsToast(false);\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('app', {\n            abstract: true,\n            views: {\n                'navbar@': {\n                    templateUrl: 'app/layouts/navbar/navbar.html',\n                    controller: 'NavbarController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                authorize: ['Auth',\n                    function (Auth) {\n                        return Auth.authorize();\n                    }\n                ],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('global');\n                }]\n            }\n        });\n    }\n})();\n\n(function () {\n    'use strict';\n    // DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n    angular\n        .module('coocotteApp')\n        .constant('VERSION', \"0.0.1-SNAPSHOT\")\n        .constant('DEBUG_INFO_ENABLED', false)\n;\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('UserManagementDialogController',UserManagementDialogController);\n\n    UserManagementDialogController.$inject = ['$stateParams', '$uibModalInstance', 'entity', 'User', 'JhiLanguageService'];\n\n    function UserManagementDialogController ($stateParams, $uibModalInstance, entity, User, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.clear = clear;\n        vm.languages = null;\n        vm.save = save;\n        vm.user = entity;\n\n\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function onSaveSuccess (result) {\n            vm.isSaving = false;\n            $uibModalInstance.close(result);\n        }\n\n        function onSaveError () {\n            vm.isSaving = false;\n        }\n\n        function save () {\n            vm.isSaving = true;\n            if (vm.user.id !== null) {\n                User.update(vm.user, onSaveSuccess, onSaveError);\n            } else {\n                User.save(vm.user, onSaveSuccess, onSaveError);\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('UserManagementDetailController', UserManagementDetailController);\n\n    UserManagementDetailController.$inject = ['$stateParams', 'User'];\n\n    function UserManagementDetailController ($stateParams, User) {\n        var vm = this;\n\n        vm.load = load;\n        vm.user = {};\n\n        vm.load($stateParams.login);\n\n        function load (login) {\n            User.get({login: login}, function(result) {\n                vm.user = result;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('UserManagementDeleteController', UserManagementDeleteController);\n\n    UserManagementDeleteController.$inject = ['$uibModalInstance', 'entity', 'User'];\n\n    function UserManagementDeleteController ($uibModalInstance, entity, User) {\n        var vm = this;\n\n        vm.user = entity;\n        vm.clear = clear;\n        vm.confirmDelete = confirmDelete;\n\n        function clear () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function confirmDelete (login) {\n            User.delete({login: login},\n                function () {\n                    $uibModalInstance.close(true);\n                });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider\n        .state('user-management', {\n            parent: 'admin',\n            url: '/user-management?page&sort',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'userManagement.home.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management.html',\n                    controller: 'UserManagementController',\n                    controllerAs: 'vm'\n                }\n            },            params: {\n                page: {\n                    value: '1',\n                    squash: true\n                },\n                sort: {\n                    value: 'id,asc',\n                    squash: true\n                }\n            },\n            resolve: {\n                pagingParams: ['$stateParams', 'PaginationUtil', function ($stateParams, PaginationUtil) {\n                    return {\n                        page: PaginationUtil.parsePage($stateParams.page),\n                        sort: $stateParams.sort,\n                        predicate: PaginationUtil.parsePredicate($stateParams.sort),\n                        ascending: PaginationUtil.parseAscending($stateParams.sort)\n                    };\n                }],\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n\n            }        })\n        .state('user-management.new', {\n            url: '/new',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: function () {\n                            return {\n                                id: null, login: null, firstName: null, lastName: null, email: null,\n                                activated: true, langKey: null, createdBy: null, createdDate: null,\n                                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                                resetKey: null, authorities: null\n                            };\n                        }\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('user-management');\n                });\n            }]\n        })\n        .state('user-management.edit', {\n            url: '/{login}/edit',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-dialog.html',\n                    controller: 'UserManagementDialogController',\n                    controllerAs: 'vm',\n                    backdrop: 'static',\n                    size: 'lg',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        })\n        .state('user-management-detail', {\n            parent: 'user-management',\n            url: '/{login}',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'user-management.detail.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/user-management/user-management-detail.html',\n                    controller: 'UserManagementDetailController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('user-management');\n                    return $translate.refresh();\n                }]\n            }\n        })\n        .state('user-management.delete', {\n            url: '/{login}/delete',\n            data: {\n                authorities: ['ROLE_ADMIN']\n            },\n            onEnter: ['$stateParams', '$state', '$uibModal', function($stateParams, $state, $uibModal) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/user-management/user-management-delete-dialog.html',\n                    controller: 'UserManagementDeleteController',\n                    controllerAs: 'vm',\n                    size: 'md',\n                    resolve: {\n                        entity: ['User', function(User) {\n                            return User.get({login : $stateParams.login});\n                        }]\n                    }\n                }).result.then(function() {\n                    $state.go('user-management', null, { reload: true });\n                }, function() {\n                    $state.go('^');\n                });\n            }]\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('UserManagementController', UserManagementController);\n\n    UserManagementController.$inject = ['Principal', 'User', 'ParseLinks', 'AlertService', '$state', 'pagingParams', 'paginationConstants', 'JhiLanguageService'];\n\n    function UserManagementController(Principal, User, ParseLinks, AlertService, $state, pagingParams, paginationConstants, JhiLanguageService) {\n        var vm = this;\n\n        vm.authorities = ['ROLE_USER', 'ROLE_ADMIN'];\n        vm.currentAccount = null;\n        vm.languages = null;\n        vm.loadAll = loadAll;\n        vm.setActive = setActive;\n        vm.users = [];\n        vm.page = 1;\n        vm.totalItems = null;\n        vm.clear = clear;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.predicate = pagingParams.predicate;\n        vm.reverse = pagingParams.ascending;\n        vm.itemsPerPage = paginationConstants.itemsPerPage;\n        vm.transition = transition;\n\n        vm.loadAll();\n        JhiLanguageService.getAll().then(function (languages) {\n            vm.languages = languages;\n        });\n        Principal.identity().then(function(account) {\n            vm.currentAccount = account;\n        });\n\n        function setActive (user, isActivated) {\n            user.activated = isActivated;\n            User.update(user, function () {\n                vm.loadAll();\n                vm.clear();\n            });\n        }\n\n        function loadAll () {\n            User.query({\n                page: pagingParams.page - 1,\n                size: vm.itemsPerPage,\n                sort: sort()\n            }, onSuccess, onError);\n        }\n\n        function onSuccess(data, headers) {\n            vm.links = ParseLinks.parse(headers('link'));\n            vm.totalItems = headers('X-Total-Count');\n            vm.queryCount = vm.totalItems;\n            vm.page = pagingParams.page;\n            vm.users = data;\n        }\n\n        function onError(error) {\n            AlertService.error(error.data.message);\n        }\n\n        function clear () {\n            vm.user = {\n                id: null, login: null, firstName: null, lastName: null, email: null,\n                activated: null, langKey: null, createdBy: null, createdDate: null,\n                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,\n                resetKey: null, authorities: null\n            };\n        }\n\n        function sort () {\n            var result = [vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc')];\n            if (vm.predicate !== 'id') {\n                result.push('id');\n            }\n            return result;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.transition();\n        }\n\n        function transition () {\n            $state.transitionTo($state.$current, {\n                page: vm.page,\n                sort: vm.predicate + ',' + (vm.reverse ? 'asc' : 'desc'),\n                search: vm.currentSearch\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-metrics', {\n            parent: 'admin',\n            url: '/metrics',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'metrics.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/metrics/metrics.html',\n                    controller: 'JhiMetricsMonitoringController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('metrics');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('JhiMetricsService', JhiMetricsService);\n\n    JhiMetricsService.$inject = ['$rootScope', '$http'];\n\n    function JhiMetricsService ($rootScope, $http) {\n        var service = {\n            getMetrics: getMetrics,\n            threadDump: threadDump\n        };\n\n        return service;\n\n        function getMetrics () {\n            return $http.get('management/metrics').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function threadDump () {\n            return $http.get('management/dump').then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiMetricsMonitoringModalController', JhiMetricsMonitoringModalController);\n\n    JhiMetricsMonitoringModalController.$inject = ['$uibModalInstance', 'threadDump'];\n\n    function JhiMetricsMonitoringModalController ($uibModalInstance, threadDump) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.getLabelClass = getLabelClass;\n        vm.threadDump = threadDump;\n        vm.threadDumpAll = 0;\n        vm.threadDumpBlocked = 0;\n        vm.threadDumpRunnable = 0;\n        vm.threadDumpTimedWaiting = 0;\n        vm.threadDumpWaiting = 0;\n\n        angular.forEach(threadDump, function(value) {\n            if (value.threadState === 'RUNNABLE') {\n                vm.threadDumpRunnable += 1;\n            } else if (value.threadState === 'WAITING') {\n                vm.threadDumpWaiting += 1;\n            } else if (value.threadState === 'TIMED_WAITING') {\n                vm.threadDumpTimedWaiting += 1;\n            } else if (value.threadState === 'BLOCKED') {\n                vm.threadDumpBlocked += 1;\n            }\n        });\n\n        vm.threadDumpAll = vm.threadDumpRunnable + vm.threadDumpWaiting +\n            vm.threadDumpTimedWaiting + vm.threadDumpBlocked;\n\n        function cancel () {\n            $uibModalInstance.dismiss('cancel');\n        }\n\n        function getLabelClass (threadState) {\n            if (threadState === 'RUNNABLE') {\n                return 'label-success';\n            } else if (threadState === 'WAITING') {\n                return 'label-info';\n            } else if (threadState === 'TIMED_WAITING') {\n                return 'label-warning';\n            } else if (threadState === 'BLOCKED') {\n                return 'label-danger';\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiMetricsMonitoringController', JhiMetricsMonitoringController);\n\n    JhiMetricsMonitoringController.$inject = ['$scope','JhiMetricsService', '$uibModal'];\n\n    function JhiMetricsMonitoringController ($scope, JhiMetricsService, $uibModal) {\n        var vm = this;\n\n        vm.cachesStats = {};\n        vm.metrics = {};\n        vm.refresh = refresh;\n        vm.refreshThreadDumpData = refreshThreadDumpData;\n        vm.servicesStats = {};\n        vm.updatingMetrics = true;\n\n        vm.refresh();\n\n        $scope.$watch('vm.metrics', function (newValue) {\n            vm.servicesStats = {};\n            angular.forEach(newValue.timers, function (value, key) {\n                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {\n                    vm.servicesStats[key] = value;\n                }\n            });\n\n            vm.cachesStats = {};\n            angular.forEach(newValue.gauges, function (value, key) {\n                if (key.indexOf('jcache.statistics') !== -1) {\n                    // remove gets or puts\n                    var index = key.lastIndexOf('.');\n                    var newKey = key.substr(0, index);\n\n                    // Keep the name of the domain\n                    vm.cachesStats[newKey] = {\n                        'name': newKey.substr(18),\n                        'value': value\n                    };\n                }\n            });\n        });\n\n        function refresh () {\n            vm.updatingMetrics = true;\n            JhiMetricsService.getMetrics().then(function (promise) {\n                vm.metrics = promise;\n                vm.updatingMetrics = false;\n            }, function (promise) {\n                vm.metrics = promise.data;\n                vm.updatingMetrics = false;\n            });\n        }\n\n        function refreshThreadDumpData () {\n            JhiMetricsService.threadDump().then(function(data) {\n                $uibModal.open({\n                    templateUrl: 'app/admin/metrics/metrics.modal.html',\n                    controller: 'JhiMetricsMonitoringModalController',\n                    controllerAs: 'vm',\n                    size: 'lg',\n                    resolve: {\n                        threadDump: function() {\n                            return data;\n                        }\n\n                    }\n                });\n            });\n        }\n\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('logs', {\n            parent: 'admin',\n            url: '/logs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'logs.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/logs/logs.html',\n                    controller: 'LogsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('logs');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('LogsService', LogsService);\n\n    LogsService.$inject = ['$resource'];\n\n    function LogsService ($resource) {\n        var service = $resource('management/logs', {}, {\n            'findAll': { method: 'GET', isArray: true},\n            'changeLevel': { method: 'PUT'}\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('LogsController', LogsController);\n\n    LogsController.$inject = ['LogsService'];\n\n    function LogsController (LogsService) {\n        var vm = this;\n\n        vm.changeLevel = changeLevel;\n        vm.loggers = LogsService.findAll();\n\n        function changeLevel (name, level) {\n            LogsService.changeLevel({name: name, level: level}, function () {\n                vm.loggers = LogsService.findAll();\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-health', {\n            parent: 'admin',\n            url: '/health',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'health.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/health/health.html',\n                    controller: 'JhiHealthCheckController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('health');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('JhiHealthService', JhiHealthService);\n\n    JhiHealthService.$inject = ['$rootScope', '$http'];\n\n    function JhiHealthService ($rootScope, $http) {\n        var separator = '.';\n        var service = {\n            checkHealth: checkHealth,\n            transformHealthData: transformHealthData,\n            getBaseName: getBaseName,\n            getSubSystemName: getSubSystemName\n        };\n\n        return service;\n\n        function checkHealth () {\n            return $http.get('management/health').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function transformHealthData (data) {\n            var response = [];\n            flattenHealthData(response, null, data);\n            return response;\n        }\n\n        function getBaseName (name) {\n            if (name) {\n                var split = name.split('.');\n                return split[0];\n            }\n        }\n\n        function getSubSystemName (name) {\n            if (name) {\n                var split = name.split('.');\n                split.splice(0, 1);\n                var remainder = split.join('.');\n                return remainder ? ' - ' + remainder : '';\n            }\n        }\n\n        /* private methods */\n        function flattenHealthData (result, path, data) {\n            angular.forEach(data, function (value, key) {\n                if (isHealthObject(value)) {\n                    if (hasSubSystem(value)) {\n                        addHealthObject(result, false, value, getModuleName(path, key));\n                        flattenHealthData(result, getModuleName(path, key), value);\n                    } else {\n                        addHealthObject(result, true, value, getModuleName(path, key));\n                    }\n                }\n            });\n            return result;\n        }\n\n        function addHealthObject (result, isLeaf, healthObject, name) {\n\n            var healthData = {\n                'name': name\n            };\n            var details = {};\n            var hasDetails = false;\n\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status' || key === 'error') {\n                    healthData[key] = value;\n                } else {\n                    if (!isHealthObject(value)) {\n                        details[key] = value;\n                        hasDetails = true;\n                    }\n                }\n            });\n\n            // Add the of the details\n            if (hasDetails) {\n                angular.extend(healthData, { 'details': details});\n            }\n\n            // Only add nodes if they provide additional information\n            if (isLeaf || hasDetails || healthData.error) {\n                result.push(healthData);\n            }\n            return healthData;\n        }\n\n        function getModuleName (path, name) {\n            var result;\n            if (path && name) {\n                result = path + separator + name;\n            }  else if (path) {\n                result = path;\n            } else if (name) {\n                result = name;\n            } else {\n                result = '';\n            }\n            return result;\n        }\n\n        function hasSubSystem (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value) {\n                if (value && value.status) {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n        function isHealthObject (healthObject) {\n            var result = false;\n            angular.forEach(healthObject, function (value, key) {\n                if (key === 'status') {\n                    result = true;\n                }\n            });\n            return result;\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular.module('coocotteApp')\n        .controller('HealthModalController', HealthModalController);\n\n    HealthModalController.$inject = ['$uibModalInstance', 'currentHealth', 'baseName', 'subSystemName'];\n\n    function HealthModalController ($uibModalInstance, currentHealth, baseName, subSystemName) {\n        var vm = this;\n\n        vm.cancel = cancel;\n        vm.currentHealth = currentHealth;\n        vm.baseName = baseName;\n        vm.subSystemName = subSystemName;\n\n        function cancel() {\n            $uibModalInstance.dismiss('cancel');\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiHealthCheckController', JhiHealthCheckController);\n\n    JhiHealthCheckController.$inject = ['JhiHealthService', '$uibModal'];\n\n    function JhiHealthCheckController (JhiHealthService, $uibModal) {\n        var vm = this;\n\n        vm.updatingHealth = true;\n        vm.getLabelClass = getLabelClass;\n        vm.refresh = refresh;\n        vm.showHealth = showHealth;\n        vm.baseName = JhiHealthService.getBaseName;\n        vm.subSystemName = JhiHealthService.getSubSystemName;\n\n        vm.refresh();\n\n        function getLabelClass (statusState) {\n            if (statusState === 'UP') {\n                return 'label-success';\n            } else {\n                return 'label-danger';\n            }\n        }\n\n        function refresh () {\n            vm.updatingHealth = true;\n            JhiHealthService.checkHealth().then(function (response) {\n                vm.healthData = JhiHealthService.transformHealthData(response);\n                vm.updatingHealth = false;\n            }, function (response) {\n                vm.healthData =  JhiHealthService.transformHealthData(response.data);\n                vm.updatingHealth = false;\n            });\n        }\n\n        function showHealth (health) {\n            $uibModal.open({\n                templateUrl: 'app/admin/health/health.modal.html',\n                controller: 'HealthModalController',\n                controllerAs: 'vm',\n                size: 'lg',\n                resolve: {\n                    currentHealth: function() {\n                        return health;\n                    },\n                    baseName: function() {\n                        return vm.baseName;\n                    },\n                    subSystemName: function() {\n                        return vm.subSystemName;\n                    }\n\n                }\n            });\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('docs', {\n            parent: 'admin',\n            url: '/docs',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'global.menu.admin.apidocs'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/docs/docs.html'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', function ($translate) {\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('jhi-configuration', {\n            parent: 'admin',\n            url: '/configuration',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'configuration.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/configuration/configuration.html',\n                    controller: 'JhiConfigurationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('configuration');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('JhiConfigurationService', JhiConfigurationService);\n\n    JhiConfigurationService.$inject = ['$filter', '$http'];\n\n    function JhiConfigurationService ($filter, $http) {\n        var service = {\n            get: get,\n            getEnv: getEnv\n        };\n\n        return service;\n\n        function get () {\n            return $http.get('management/configprops').then(getConfigPropsComplete);\n\n            function getConfigPropsComplete (response) {\n                var properties = [];\n                angular.forEach(response.data, function (data) {\n                    properties.push(data);\n                });\n                var orderBy = $filter('orderBy');\n                return orderBy(properties, 'prefix');\n            }\n        }\n\n        function getEnv () {\n            return $http.get('management/env').then(getEnvComplete);\n\n            function getEnvComplete (response) {\n                var properties = {};\n                angular.forEach(response.data, function (val,key) {\n                    var vals = [];\n                    angular.forEach(val, function (v,k) {\n                        vals.push({ key:k, val:v });\n                    });\n                    properties[key] = vals;\n                });\n                return properties;\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('JhiConfigurationController', JhiConfigurationController);\n\n    JhiConfigurationController.$inject = ['$filter','JhiConfigurationService'];\n\n    function JhiConfigurationController (filter,JhiConfigurationService) {\n        var vm = this;\n\n        vm.allConfiguration = null;\n        vm.configuration = null;\n\n        JhiConfigurationService.get().then(function(configuration) {\n            vm.configuration = configuration;\n        });\n        JhiConfigurationService.getEnv().then(function (configuration) {\n            vm.allConfiguration = configuration;\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('audits', {\n            parent: 'admin',\n            url: '/audits',\n            data: {\n                authorities: ['ROLE_ADMIN'],\n                pageTitle: 'audits.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/admin/audits/audits.html',\n                    controller: 'AuditsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('audits');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .factory('AuditsService', AuditsService);\n\n    AuditsService.$inject = ['$resource'];\n\n    function AuditsService ($resource) {\n        var service = $resource('management/audits/:id', {}, {\n            'get': {\n                method: 'GET',\n                isArray: true\n            },\n            'query': {\n                method: 'GET',\n                isArray: true,\n                params: {fromDate: null, toDate: null}\n            }\n        });\n\n        return service;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('AuditsController', AuditsController);\n\n    AuditsController.$inject = ['$filter', 'AuditsService', 'ParseLinks'];\n\n    function AuditsController ($filter, AuditsService, ParseLinks) {\n        var vm = this;\n\n        vm.audits = null;\n        vm.fromDate = null;\n        vm.links = null;\n        vm.loadPage = loadPage;\n        vm.onChangeDate = onChangeDate;\n        vm.page = 1;\n        vm.previousMonth = previousMonth;\n        vm.toDate = null;\n        vm.today = today;\n        vm.totalItems = null;\n\n        vm.today();\n        vm.previousMonth();\n        vm.onChangeDate();\n\n        function onChangeDate () {\n            var dateFormat = 'yyyy-MM-dd';\n            var fromDate = $filter('date')(vm.fromDate, dateFormat);\n            var toDate = $filter('date')(vm.toDate, dateFormat);\n\n            AuditsService.query({page: vm.page -1, size: 20, fromDate: fromDate, toDate: toDate}, function(result, headers){\n                vm.audits = result;\n                vm.links = ParseLinks.parse(headers('link'));\n                vm.totalItems = headers('X-Total-Count');\n            });\n        }\n\n        // Date picker configuration\n        function today () {\n            // Today + 1 day - needed if the current day must be included\n            var today = new Date();\n            vm.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        }\n\n        function previousMonth () {\n            var fromDate = new Date();\n            if (fromDate.getMonth() === 0) {\n                fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n            } else {\n                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n            }\n\n            vm.fromDate = fromDate;\n        }\n\n        function loadPage (page) {\n            vm.page = page;\n            vm.onChangeDate();\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig ($stateProvider) {\n        $stateProvider.state('admin', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('settings', {\n            parent: 'account',\n            url: '/settings',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.settings'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/settings/settings.html',\n                    controller: 'SettingsController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('settings');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('SettingsController', SettingsController);\n\n    SettingsController.$inject = ['Principal', 'Auth', 'JhiLanguageService', '$translate'];\n\n    function SettingsController (Principal, Auth, JhiLanguageService, $translate) {\n        var vm = this;\n\n        vm.error = null;\n        vm.save = save;\n        vm.settingsAccount = null;\n        vm.success = null;\n\n        /**\n         * Store the \"settings account\" in a separate variable, and not in the shared \"account\" variable.\n         */\n        var copyAccount = function (account) {\n            return {\n                activated: account.activated,\n                email: account.email,\n                firstName: account.firstName,\n                langKey: account.langKey,\n                lastName: account.lastName,\n                login: account.login\n            };\n        };\n\n        Principal.identity().then(function(account) {\n            vm.settingsAccount = copyAccount(account);\n        });\n\n        function save () {\n            Auth.updateAccount(vm.settingsAccount).then(function() {\n                vm.error = null;\n                vm.success = 'OK';\n                Principal.identity(true).then(function(account) {\n                    vm.settingsAccount = copyAccount(account);\n                });\n                JhiLanguageService.getCurrent().then(function(current) {\n                    if (vm.settingsAccount.langKey !== current) {\n                        $translate.use(vm.settingsAccount.langKey);\n                    }\n                });\n            }).catch(function() {\n                vm.success = null;\n                vm.error = 'ERROR';\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('requestReset', {\n            parent: 'account',\n            url: '/reset/request',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/request/reset.request.html',\n                    controller: 'RequestResetController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('RequestResetController', RequestResetController);\n\n    RequestResetController.$inject = ['$timeout', 'Auth'];\n\n    function RequestResetController ($timeout, Auth) {\n        var vm = this;\n\n        vm.error = null;\n        vm.errorEmailNotExists = null;\n        vm.requestReset = requestReset;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#email').focus();});\n\n        function requestReset () {\n\n            vm.error = null;\n            vm.errorEmailNotExists = null;\n\n            Auth.resetPasswordInit(vm.resetAccount.email).then(function () {\n                vm.success = 'OK';\n            }).catch(function (response) {\n                vm.success = null;\n                if (response.status === 400 && response.data === 'email address not registered') {\n                    vm.errorEmailNotExists = 'ERROR';\n                } else {\n                    vm.error = 'ERROR';\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('finishReset', {\n            parent: 'account',\n            url: '/reset/finish?key',\n            data: {\n                authorities: []\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/reset/finish/reset.finish.html',\n                    controller: 'ResetFinishController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('reset');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('ResetFinishController', ResetFinishController);\n\n    ResetFinishController.$inject = ['$stateParams', '$timeout', 'Auth', 'LoginService'];\n\n    function ResetFinishController ($stateParams, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.keyMissing = angular.isUndefined($stateParams.key);\n        vm.confirmPassword = null;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.finishReset = finishReset;\n        vm.login = LoginService.open;\n        vm.resetAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#password').focus();});\n\n        function finishReset() {\n            vm.doNotMatch = null;\n            vm.error = null;\n            if (vm.resetAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: vm.resetAccount.password}).then(function () {\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('register', {\n            parent: 'account',\n            url: '/register',\n            data: {\n                authorities: [],\n                pageTitle: 'register.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/register/register.html',\n                    controller: 'RegisterController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('register');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('RegisterController', RegisterController);\n\n\n    RegisterController.$inject = ['$translate', '$timeout', 'Auth', 'LoginService'];\n\n    function RegisterController ($translate, $timeout, Auth, LoginService) {\n        var vm = this;\n\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.errorUserExists = null;\n        vm.login = LoginService.open;\n        vm.register = register;\n        vm.registerAccount = {};\n        vm.success = null;\n\n        $timeout(function (){angular.element('#login').focus();});\n\n        function register () {\n            if (vm.registerAccount.password !== vm.confirmPassword) {\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.registerAccount.langKey = $translate.use();\n                vm.doNotMatch = null;\n                vm.error = null;\n                vm.errorUserExists = null;\n                vm.errorEmailExists = null;\n\n                Auth.createAccount(vm.registerAccount).then(function () {\n                    vm.success = 'OK';\n                }).catch(function (response) {\n                    vm.success = null;\n                    if (response.status === 400 && response.data === 'login already in use') {\n                        vm.errorUserExists = 'ERROR';\n                    } else if (response.status === 400 && response.data === 'email address already in use') {\n                        vm.errorEmailExists = 'ERROR';\n                    } else {\n                        vm.error = 'ERROR';\n                    }\n                });\n            }\n        }\n    }\n})();\n\n/* globals $ */\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .directive('passwordStrengthBar', passwordStrengthBar);\n\n    function passwordStrengthBar () {\n        var directive = {\n            replace: true,\n            restrict: 'E',\n            template: '<div id=\"strength\">' +\n                '<small data-translate=\"global.messages.validate.newpassword.strength\">Password strength:</small>' +\n                '<ul id=\"strengthBar\">' +\n                '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>' +\n                '</ul>' +\n                '</div>',\n            scope: {\n                passwordToCheck: '='\n            },\n            link: linkFunc\n        };\n\n        return directive;\n\n        /* private helper methods*/\n\n        function linkFunc(scope, iElement) {\n            var strength = {\n                colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\n                mesureStrength: function (p) {\n\n                    var _force = 0;\n                    var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n\n                    var _lowerLetters = /[a-z]+/.test(p);\n                    var _upperLetters = /[A-Z]+/.test(p);\n                    var _numbers = /[0-9]+/.test(p);\n                    var _symbols = _regex.test(p);\n\n                    var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];\n                    var _passedMatches = $.grep(_flags, function (el) {\n                        return el === true;\n                    }).length;\n\n                    _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n                    _force += _passedMatches * 10;\n\n                    // penalty (short password)\n                    _force = (p.length <= 6) ? Math.min(_force, 10) : _force;\n\n                    // penalty (poor variety of characters)\n                    _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;\n                    _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;\n                    _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;\n\n                    return _force;\n\n                },\n                getColor: function (s) {\n\n                    var idx;\n                    if (s <= 10) {\n                        idx = 0;\n                    }\n                    else if (s <= 20) {\n                        idx = 1;\n                    }\n                    else if (s <= 30) {\n                        idx = 2;\n                    }\n                    else if (s <= 40) {\n                        idx = 3;\n                    }\n                    else {\n                        idx = 4;\n                    }\n\n                    return { idx: idx + 1, col: this.colors[idx] };\n                }\n            };\n            scope.$watch('passwordToCheck', function (password) {\n                if (password) {\n                    var c = strength.getColor(strength.mesureStrength(password));\n                    iElement.removeClass('ng-hide');\n                    iElement.find('ul').children('li')\n                        .css({ 'background-color': '#DDD' })\n                        .slice(0, c.idx)\n                        .css({ 'background-color': c.col });\n                }\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('password', {\n            parent: 'account',\n            url: '/password',\n            data: {\n                authorities: ['ROLE_USER'],\n                pageTitle: 'global.menu.account.password'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/password/password.html',\n                    controller: 'PasswordController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('password');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('PasswordController', PasswordController);\n\n    PasswordController.$inject = ['Auth', 'Principal'];\n\n    function PasswordController (Auth, Principal) {\n        var vm = this;\n\n        vm.changePassword = changePassword;\n        vm.doNotMatch = null;\n        vm.error = null;\n        vm.success = null;\n\n        Principal.identity().then(function(account) {\n            vm.account = account;\n        });\n\n        function changePassword () {\n            if (vm.password !== vm.confirmPassword) {\n                vm.error = null;\n                vm.success = null;\n                vm.doNotMatch = 'ERROR';\n            } else {\n                vm.doNotMatch = null;\n                Auth.changePassword(vm.password).then(function () {\n                    vm.error = null;\n                    vm.success = 'OK';\n                }).catch(function () {\n                    vm.success = null;\n                    vm.error = 'ERROR';\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('activate', {\n            parent: 'account',\n            url: '/activate?key',\n            data: {\n                authorities: [],\n                pageTitle: 'activate.title'\n            },\n            views: {\n                'content@': {\n                    templateUrl: 'app/account/activate/activate.html',\n                    controller: 'ActivationController',\n                    controllerAs: 'vm'\n                }\n            },\n            resolve: {\n                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n                    $translatePartialLoader.addPart('activate');\n                    return $translate.refresh();\n                }]\n            }\n        });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .controller('ActivationController', ActivationController);\n\n    ActivationController.$inject = ['$stateParams', 'Auth', 'LoginService'];\n\n    function ActivationController ($stateParams, Auth, LoginService) {\n        var vm = this;\n\n        Auth.activateAccount({key: $stateParams.key}).then(function () {\n            vm.error = null;\n            vm.success = 'OK';\n        }).catch(function () {\n            vm.success = null;\n            vm.error = 'ERROR';\n        });\n\n        vm.login = LoginService.open;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('coocotteApp')\n        .config(stateConfig);\n\n    stateConfig.$inject = ['$stateProvider'];\n\n    function stateConfig($stateProvider) {\n        $stateProvider.state('account', {\n            abstract: true,\n            parent: 'app'\n        });\n    }\n})();\n(function(){angular.module('coocotteApp').run(['$templateCache', function($templateCache) {$templateCache.put('app/home/home.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"home.title\">Welcome, Java Hipster!</h1><p class=\"lead\" data-translate=\"home.subtitle\">This is your homepage</p><div ng-switch=\"vm.isAuthenticated()\"><div class=\"alert alert-success\" ng-switch-when=\"true\" data-translate=\"home.logged.message\" translate-values=\"{username: \\'{{vm.account.login}}\\'}\">You are logged in as user \"{{vm.account.login}}\".</div><div class=\"alert alert-warning\" ng-switch-when=\"false\" data-translate=\"global.messages.info.authenticated\" translate-compile>If you want to <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>, you can try the default accounts:<br>- Administrator (login=\"admin\" and password=\"admin\")<br>- User (login=\"user\" and password=\"user\").</div><div class=\"alert alert-warning\" ng-switch-when=\"false\" data-translate=\"global.messages.info.register\" translate-compile>You don\\'t have an account yet? <a class=\"alert-link\" ui-sref=\"register\">Register a new account</a></div></div><p data-translate=\"home.question\">If you have any question on JHipster:</p><ul><li><a href=\"http://jhipster.github.io/\" target=\"_blank\" data-translate=\"home.link.homepage\">JHipster homepage</a></li><li><a href=\"http://stackoverflow.com/tags/jhipster/info\" target=\"_blank\" data-translate=\"home.link.stackoverflow\">JHipster on Stack Overflow</a></li><li><a href=\"https://github.com/jhipster/generator-jhipster/issues?state=open\" target=\"_blank\" data-translate=\"home.link.bugtracker\">JHipster bug tracker</a></li><li><a href=\"https://gitter.im/jhipster/generator-jhipster\" target=\"_blank\" data-translate=\"home.link.chat\">JHipster public chat room</a></li><li><a href=\"https://twitter.com/java_hipster\" target=\"_blank\" data-translate=\"home.link.follow\">follow @java_hipster on Twitter</a></li></ul><p><span data-translate=\"home.like\">If you like JHipster, don\\'t forget to give us a star on </span>&nbsp;<a href=\"https://github.com/jhipster/generator-jhipster\" target=\"_blank\" data-translate=\"home.github\">Github</a>!</p></div></div></div>');\n$templateCache.put('app/admin/audits/audits.html','<div><h2 data-translate=\"audits.title\">Audits</h2><div class=\"row\"><div class=\"col-md-5\"><h4 data-translate=\"audits.filter.title\">Filter by date</h4><p class=\"input-group\"><span class=\"input-group-addon\" data-translate=\"audits.filter.from\">from</span> <input type=\"date\" class=\"input-sm form-control\" name=\"start\" ng-model=\"vm.fromDate\" ng-change=\"vm.onChangeDate()\" required> <span class=\"input-group-addon\" data-translate=\"audits.filter.to\">to</span> <input type=\"date\" class=\"input-sm form-control\" name=\"end\" ng-model=\"vm.toDate\" ng-change=\"vm.onChangeDate()\" required></p></div></div><table class=\"table table-condensed table-striped table-bordered table-responsive\"><thead><tr><th ng-click=\"predicate = \\'timestamp\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.date\">Date</span></th><th ng-click=\"predicate = \\'principal\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.principal\">User</span></th><th ng-click=\"predicate = \\'type\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.status\">State</span></th><th ng-click=\"predicate = \\'data.message\\'; reverse=!reverse\"><span data-translate=\"audits.table.header.data\">Extra data</span></th></tr></thead><tr ng-repeat=\"audit in vm.audits | filter:filter | orderBy:predicate:reverse\" ng-hide=\"audit.filtered\"><td><span>{{audit.timestamp| date:\\'medium\\'}}</span></td><td><small>{{audit.principal}}</small></td><td>{{audit.type}}</td><td><span ng-show=\"audit.data.message\">{{audit.data.message}}</span> <span ng-show=\"audit.data.remoteAddress\"><span data-translate=\"audits.table.data.remoteAddress\">Remote Address</span> {{audit.data.remoteAddress}}</span></td></tr></table><div class=\"text-center\"><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" ng-model=\"vm.page\" ng-change=\"vm.loadPage(vm.page)\"></uib-pagination></div></div>');\n$templateCache.put('app/admin/docs/docs.html','<iframe src=\"swagger-ui/index.html\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" width=\"100%\" height=\"900\" scrolling=\"auto\" target=\"_top\" title=\"Swagger UI\"></iframe>');\n$templateCache.put('app/admin/configuration/configuration.html','<div><h2 data-translate=\"configuration.title\">Configuration</h2><span data-translate=\"configuration.filter\">Filter (by prefix)</span> <input type=\"text\" ng-model=\"filter\" class=\"form-control\"><label ng-hide=\"filteredConfig.length == 0\">Spring configuration</label><table class=\"table table-condensed table-striped table-bordered table-responsive\" style=\"table-layout:fixed\" ng-hide=\"filteredConfig.length == 0\"><thead><tr><th ng-click=\"predicate = \\'prefix\\'; reverse=!reverse\" class=\"col-sm-4\"><span data-translate=\"configuration.table.prefix\">Prefix</span></th><th data-translate=\"configuration.table.properties\" class=\"col-sm-8\">Properties</th></tr></thead><tr ng-repeat=\"entry in filtered = (vm.configuration | filter:filter | orderBy:predicate:reverse)\"><td><span>{{entry.prefix}}</span></td><td><div class=\"row\" ng-repeat=\"(key, value) in entry.properties\"><div class=\"col-md-4\">{{key}}</div><div class=\"col-md-8\"><span class=\"pull-right label label-default break\">{{value}}</span></div></div></td></tr></table><div ng-repeat=\"(key, value) in vm.allConfiguration\"><label ng-hide=\"filtered.length == 0\"><span>{{key}}</span></label><table class=\"table table-condensed table-striped table-bordered table-responsive\" style=\"table-layout:fixed\" ng-hide=\"filtered.length == 0\"><thead><tr><th class=\"col-sm-4\">Property</th><th class=\"col-sm-8\">Value</th></tr></thead><tbody><tr ng-repeat=\"item in filtered = (value | filter:filter)\"><td class=\"break\">{{item.key}}</td><td class=\"break\"><span class=\"pull-right label label-default break\">{{item.val}}</span></td></tr></tbody></table></div></div>');\n$templateCache.put('app/admin/health/health.html','<div><h2 data-translate=\"health.title\">Health Checks</h2><p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.refresh()\"><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span data-translate=\"health.refresh.button\">Refresh</span></button></p><table id=\"healthCheck\" class=\"table table-striped\"><thead><tr><th class=\"col-md-7\" data-translate=\"health.table.service\">Service Name</th><th class=\"col-md-2 text-center\" data-translate=\"health.table.status\">Status</th><th class=\"col-md-2 text-center\" data-translate=\"health.details.details\">Details</th></tr></thead><tbody><tr ng-repeat=\"health in vm.healthData\"><td>{{\\'health.indicator.\\' + vm.baseName(health.name) | translate}} {{vm.subSystemName(health.name)}}</td><td class=\"text-center\"><span class=\"label\" ng-class=\"vm.getLabelClass(health.status)\">{{\\'health.status.\\' + health.status | translate}}</span></td><td class=\"text-center\"><a class=\"hand\" ng-click=\"vm.showHealth(health)\" ng-show=\"health.details || health.error\"><i class=\"glyphicon glyphicon-eye-open\"></i></a></td></tr></tbody></table></div>');\n$templateCache.put('app/admin/health/health.modal.html','<div class=\"modal-header\"><button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" ng-click=\"vm.cancel()\"><span aria-hidden=\"true\">&times;</span></button><h4 class=\"modal-title\" id=\"showHealthLabel\">{{\\'health.indicator.\\' + vm.baseName(vm.currentHealth.name) | translate}} {{vm.subSystemName(vm.currentHealth.name)}}</h4></div><div class=\"modal-body pad\"><div ng-show=\"vm.currentHealth.details\"><h4 data-translate=\"health.details.properties\">Properties</h4><table class=\"table table-striped\"><thead><tr><th class=\"col-md-6 text-left\" data-translate=\"health.details.name\">Name</th><th class=\"col-md-6 text-left\" data-translate=\"health.details.value\">Value</th></tr></thead><tbody><tr ng-repeat=\"(k,v) in vm.currentHealth.details\"><td class=\"col-md-6 text-left\">{{k}}</td><td class=\"col-md-6 text-left\">{{v}}</td></tr></tbody></table></div><div ng-show=\"vm.currentHealth.error\"><h4 data-translate=\"health.details.error\">Error</h4><pre>{{vm.currentHealth.error}}</pre></div></div><div class=\"modal-footer\"><button data-dismiss=\"modal\" class=\"btn btn-default pull-left\" type=\"button\" ng-click=\"vm.cancel()\">Done</button></div>');\n$templateCache.put('app/admin/logs/logs.html','<div class=\"table-responsive\"><h2 data-translate=\"logs.title\">Logs</h2><p data-translate=\"logs.nbloggers\" translate-values=\"{total: \\'{{ vm.loggers.length }}\\'}\">There are {{ vm.loggers.length }} loggers.</p><span data-translate=\"logs.filter\">Filter</span> <input type=\"text\" ng-model=\"filter\" class=\"form-control\"><table class=\"table table-condensed table-striped table-bordered\"><thead><tr title=\"click to order\"><th ng-click=\"predicate = \\'name\\'; reverse=!reverse\"><span data-translate=\"logs.table.name\">Name</span></th><th ng-click=\"predicate = \\'level\\'; reverse=!reverse\"><span data-translate=\"logs.table.level\">Level</span></th></tr></thead><tr ng-repeat=\"logger in vm.loggers | filter:filter | orderBy:predicate:reverse\"><td><small>{{logger.name | characters:140}}</small></td><td><button ng-click=\"vm.changeLevel(logger.name, \\'TRACE\\')\" ng-class=\"(logger.level==\\'TRACE\\') ? \\'btn-danger\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">TRACE</button> <button ng-click=\"vm.changeLevel(logger.name, \\'DEBUG\\')\" ng-class=\"(logger.level==\\'DEBUG\\') ? \\'btn-warning\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">DEBUG</button> <button ng-click=\"vm.changeLevel(logger.name, \\'INFO\\')\" ng-class=\"(logger.level==\\'INFO\\') ? \\'btn-info\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">INFO</button> <button ng-click=\"vm.changeLevel(logger.name, \\'WARN\\')\" ng-class=\"(logger.level==\\'WARN\\') ? \\'btn-success\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">WARN</button> <button ng-click=\"vm.changeLevel(logger.name, \\'ERROR\\')\" ng-class=\"(logger.level==\\'ERROR\\') ? \\'btn-primary\\' : \\'btn-default\\'\" class=\"btn btn-default btn-xs\">ERROR</button></td></tr></table></div>');\n$templateCache.put('app/admin/metrics/metrics.html','<div><h2 data-translate=\"metrics.title\">Application Metrics</h2><p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.refresh()\"><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span data-translate=\"metrics.refresh.button\">Refresh</span></button></p><h3 data-translate=\"metrics.jvm.title\">JVM Metrics</h3><div class=\"row\" ng-hide=\"vm.updatingMetrics\"><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.memory.title\">Memory</b><p><span data-translate=\"metrics.jvm.memory.total\">Total Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.total.max\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.total.max\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.total.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.total.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.total.max\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.memory.heap\">Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.heap.max\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.memory.nonheap\">Non-Heap Memory</span> ({{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value / 1000000 | number:0}}M / {{vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value / 1000000 | number:0}}M)</p><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value\" value=\"vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.memory.non-heap.used\\'].value * 100 / vm.metrics.gauges[\\'jvm.memory.non-heap.committed\\'].value | number:0}}%</span></uib-progressbar></div><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.threads.title\">Threads</b> (Total: {{vm.metrics.gauges[\\'jvm.threads.count\\'].value}}) <a class=\"hand\" ng-click=\"vm.refreshThreadDumpData()\" data-toggle=\"modal\" data-target=\"#threadDump\"><i class=\"glyphicon glyphicon-eye-open\"></i></a><p><span data-translate=\"metrics.jvm.threads.runnable\">Runnable</span> {{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value}}</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.threads.runnable.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"warning\"><span>{{vm.metrics.gauges[\\'jvm.threads.timed_waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"warning\"><span>{{vm.metrics.gauges[\\'jvm.threads.waiting.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar><p><span data-translate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value}})</p><uib-progressbar min=\"0\" value=\"vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value\" max=\"vm.metrics.gauges[\\'jvm.threads.count\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'jvm.threads.blocked.count\\'].value * 100 / vm.metrics.gauges[\\'jvm.threads.count\\'].value | number:0}}%</span></uib-progressbar></div><div class=\"col-md-4\"><b data-translate=\"metrics.jvm.gc.title\">Garbage collections</b><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.marksweepcount\">Mark Sweep count</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.count\\'].value}}</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.marksweeptime\">Mark Sweep time</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-MarkSweep.time\\'].value}}ms</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.scavengecount\">Scavenge count</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.count\\'].value}}</div></div><div class=\"row\"><div class=\"col-md-9\" data-translate=\"metrics.jvm.gc.scavengetime\">Scavenge time</div><div class=\"col-md-3 text-right\">{{vm.metrics.gauges[\\'jvm.garbage.PS-Scavenge.time\\'].value}}ms</div></div></div></div><div class=\"well well-lg\" ng-show=\"vm.updatingMetrics\" data-translate=\"metrics.updating\">Updating...</div><h3 data-translate=\"metrics.jvm.http.title\">HTTP requests (events per second)</h3><p><span data-translate=\"metrics.jvm.http.active\">Active requests</span> <b>{{vm.metrics.counters[\\'com.codahale.metrics.servlet.InstrumentedFilter.activeRequests\\'].count | number:0}}</b> - <span data-translate=\"metrics.jvm.http.total\">Total requests</span> <b>{{vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count | number:0}}</b></p><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.jvm.http.table.code\">Code</th><th data-translate=\"metrics.jvm.http.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.http.table.mean\">Mean</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (1 min)</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (5 min)</th><th class=\"text-right\"><span data-translate=\"metrics.jvm.http.table.average\">Average</span> (15 min)</th></tr></thead><tbody><tr><td data-translate=\"metrics.jvm.http.code.ok\">OK</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.notfound\">Not Found</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound\\'].m15_rate | number:2}}</td></tr><tr><td data-translate=\"metrics.jvm.http.code.servererror\">Server error</td><td><uib-progressbar min=\"0\" max=\"vm.metrics.timers[\\'com.codahale.metrics.servlet.InstrumentedFilter.requests\\'].count\" value=\"vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].count}}</span></uib-progressbar></td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].mean_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m1_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m5_rate | number:2}}</td><td class=\"text-right\">{{vm.metrics.meters[\\'com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError\\'].m15_rate | number:2}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.servicesstats.title\">Services statistics (time in millisecond)</h3><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.servicesstats.table.name\">Service name</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.mean\">Mean</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.min\">Min</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p50\">p50</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p75\">p75</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p95\">p95</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.p99\">p99</th><th class=\"text-right\" data-translate=\"metrics.servicesstats.table.max\">Max</th></tr></thead><tbody><tr ng-repeat=\"(k, v) in vm.servicesStats\"><td>{{k}}</td><td class=\"text-right\">{{v.count}}</td><td class=\"text-right\">{{v.mean * 1000 | number:0}}</td><td class=\"text-right\">{{v.min * 1000 | number:0}}</td><td class=\"text-right\">{{v.p50 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p75 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p95 * 1000 | number:0}}</td><td class=\"text-right\">{{v.p99 * 1000 | number:0}}</td><td class=\"text-right\">{{v.max * 1000 | number:0}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.cache.title\">Cache statistics</h3><div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th data-translate=\"metrics.cache.cachename\">Cache name</th><th class=\"text-right\" data-translate=\"metrics.cache.hits\">Cache Hits</th><th class=\"text-right\" data-translate=\"metrics.cache.misses\">Cache Misses</th><th class=\"text-right\" data-translate=\"metrics.cache.gets\">Cache Gets</th><th class=\"text-right\" data-translate=\"metrics.cache.puts\">Cache Puts</th><th class=\"text-right\" data-translate=\"metrics.cache.removals\">Cache Removals</th><th class=\"text-right\" data-translate=\"metrics.cache.evictions\">Cache Evictions</th><th class=\"text-right\" data-translate=\"metrics.cache.hitPercent\">Cache Hit %</th><th class=\"text-right\" data-translate=\"metrics.cache.missPercent\">Cache Miss %</th><th class=\"text-right\" data-translate=\"metrics.cache.averageGetTime\">Average get time (\\xB5s)</th><th class=\"text-right\" data-translate=\"metrics.cache.averagePutTime\">Average put time (\\xB5s)</th><th class=\"text-right\" data-translate=\"metrics.cache.averageRemoveTime\">Average remove time (\\xB5s)</th></tr></thead><tbody><tr ng-repeat=\"(k, v) in vm.cachesStats\" ng-once><td>{{v.name}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.cache-hits\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.cache-misses\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.cache-gets\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.cache-puts\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.cache-removals\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.cache-evictions\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.cache-hit-percentage\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.cache-miss-percentage\\'].value}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.average-get-time\\'].value | number:2}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.average-put-time\\'].value | number:2}}</td><td class=\"text-right\">{{vm.metrics.gauges[k + \\'.average-remove-time\\'].value | number:2}}</td></tr></tbody></table></div><h3 data-translate=\"metrics.datasource.title\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\">DataSource statistics (time in millisecond)</h3><div class=\"table-responsive\" ng-show=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value > 0\"><table class=\"table table-striped\"><thead><tr><th><span data-translate=\"metrics.datasource.usage\">Usage</span> ({{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value}} / {{vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value}})</th><th class=\"text-right\" data-translate=\"metrics.datasource.count\">Count</th><th class=\"text-right\" data-translate=\"metrics.datasource.mean\">Mean</th><th class=\"text-right\" data-translate=\"metrics.datasource.min\">Min</th><th class=\"text-right\" data-translate=\"metrics.datasource.p50\">p50</th><th class=\"text-right\" data-translate=\"metrics.datasource.p75\">p75</th><th class=\"text-right\" data-translate=\"metrics.datasource.p95\">p95</th><th class=\"text-right\" data-translate=\"metrics.datasource.p99\">p99</th><th class=\"text-right\" data-translate=\"metrics.datasource.max\">Max</th></tr></thead><tbody><tr><td><div class=\"progress progress-striped\"><uib-progressbar min=\"0\" max=\"vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value\" value=\"vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value\" class=\"progress-striped active\" type=\"success\"><span>{{vm.metrics.gauges[\\'HikariPool-1.pool.ActiveConnections\\'].value * 100 / vm.metrics.gauges[\\'HikariPool-1.pool.TotalConnections\\'].value | number:0}}%</span></uib-progressbar></div></td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].count}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].mean | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].min | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p50 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p75 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p95 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].p99 | number:2}}</td><td class=\"text-right\">{{vm.metrics.histograms[\\'HikariPool-1.pool.Usage\\'].max | number:2}}</td></tr></tbody></table></div></div>');\n$templateCache.put('app/admin/metrics/metrics.modal.html','<!-- Modal used to display the threads dump --><div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"vm.cancel()\">&times;</button><h4 class=\"modal-title\" data-translate=\"metrics.jvm.threads.dump.title\">Threads dump</h4></div><div class=\"modal-body pad\"><span class=\"label label-primary\" ng-click=\"threadDumpFilter = {}\">All&nbsp;<span class=\"badge\">{{vm.threadDumpAll}}</span></span>&nbsp; <span class=\"label label-success\" ng-click=\"threadDumpFilter = {threadState: \\'RUNNABLE\\'}\">Runnable&nbsp;<span class=\"badge\">{{vm.threadDumpRunnable}}</span></span>&nbsp; <span class=\"label label-info\" ng-click=\"threadDumpFilter = {threadState: \\'WAITING\\'}\">Waiting&nbsp;<span class=\"badge\">{{vm.threadDumpWaiting}}</span></span>&nbsp; <span class=\"label label-warning\" ng-click=\"threadDumpFilter = {threadState: \\'TIMED_WAITING\\'}\">Timed Waiting&nbsp;<span class=\"badge\">{{vm.threadDumpTimedWaiting}}</span></span>&nbsp; <span class=\"label label-danger\" ng-click=\"threadDumpFilter = {threadState: \\'BLOCKED\\'}\">Blocked&nbsp;<span class=\"badge\">{{vm.threadDumpBlocked}}</span></span>&nbsp;<div class=\"voffset2\">&nbsp;</div>Filter <input type=\"text\" ng-model=\"threadDumpFilter\" class=\"form-control\"><div class=\"row pad\" ng-repeat=\"(k, v) in vm.threadDump | filter:threadDumpFilter\"><h5><span class=\"label\" ng-class=\"vm.getLabelClass(v.threadState)\">{{v.threadState}}</span>&nbsp;{{v.threadName}} (ID {{v.threadId}}) <a ng-click=\"show = !show\"><span ng-show=\"!show\" data-translate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span> <span ng-show=\"show\" data-translate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span></a></h5><div class=\"well\" ng-show=\"show\"><div ng-repeat=\"(stK, stV) in v.stackTrace\">{{stV.className}}.{{stV.methodName}}({{stV.fileName}}:{{stV.lineNumber}}) <span class=\"voffset1\"></span></div></div><table class=\"table table-condensed\"><thead><tr><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th><th class=\"text-right\" data-translate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th><th data-translate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th></tr></thead><tbody><tr><td>{{v.blockedTime}}</td><td>{{v.blockedCount}}</td><td>{{v.waitedTime}}</td><td>{{v.waitedCount}}</td><td>{{v.lockName}}</td></tr></tbody></table></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default pull-left\" data-dismiss=\"modal\" ng-click=\"vm.cancel()\">Done</button></div>');\n$templateCache.put('app/admin/user-management/user-management-delete-dialog.html','<form name=\"deleteForm\" ng-submit=\"vm.confirmDelete(vm.user.login)\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" data-translate=\"entity.delete.title\">Confirm delete operation</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><p data-translate=\"userManagement.delete.question\" translate-values=\"{login: \\'{{vm.user.login}}\\'}\">Are you sure you want to delete this User?</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" class=\"btn btn-danger\"><span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span data-translate=\"entity.action.delete\">Delete</span></button></div></form>');\n$templateCache.put('app/admin/user-management/user-management-detail.html','<div><h2><span data-translate=\"userManagement.detail.title\">User</span> [<b>{{vm.user.login}}</b>]</h2><dl class=\"dl-horizontal jh-entity-details\"><dt><span data-translate=\"userManagement.login\">Login</span></dt><dd><span>{{vm.user.login}}</span> <span class=\"label label-danger\" ng-show=\"!vm.user.activated\" data-translate=\"userManagement.deactivated\">Deactivated</span> <span class=\"label label-success\" ng-show=\"vm.user.activated\" data-translate=\"userManagement.activated\">Activated</span></dd><dt><span data-translate=\"userManagement.firstName\">First Name</span></dt><dd>{{vm.user.firstName}}</dd><dt><span data-translate=\"userManagement.lastName\">Last Name</span></dt><dd>{{vm.user.lastName}}</dd><dt><span data-translate=\"userManagement.email\">Email</span></dt><dd>{{vm.user.email}}</dd><dt><span data-translate=\"userManagement.langKey\">Lang Key</span></dt><dd>{{vm.user.langKey}}</dd><dt><span data-translate=\"userManagement.createdBy\">Created By</span></dt><dd>{{vm.user.createdBy}}</dd><dt><span data-translate=\"userManagement.createdDate\">Created Date</span></dt><dd>{{vm.user.createdDate | date:\\'dd/MM/yy HH:mm\\' }}</dd><dt><span data-translate=\"userManagement.lastModifiedBy\">Last Modified By</span></dt><dd>{{vm.user.lastModifiedBy}}</dd><dt><span data-translate=\"userManagement.lastModifiedDate\">Last Modified Date</span></dt><dd>{{vm.user.lastModifiedDate | date:\\'dd/MM/yy HH:mm\\'}}</dd><dt><span data-translate=\"userManagement.profiles\">Profiles</span></dt><dd><ul class=\"list-unstyled\"><li ng-repeat=\"authority in vm.user.authorities\"><span class=\"label label-info\">{{authority}}</span></li></ul></dd></dl><button type=\"submit\" ui-sref=\"user-management\" class=\"btn btn-info\"><span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span data-translate=\"entity.action.back\"> Back</span></button></div>');\n$templateCache.put('app/admin/user-management/user-management-dialog.html','<form name=\"editForm\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.clear()\">&times;</button><h4 class=\"modal-title\" id=\"myUserLabel\" data-translate=\"userManagement.home.createOrEditLabel\">Create or edit a User</h4></div><div class=\"modal-body\"><jhi-alert-error></jhi-alert-error><div class=\"form-group\"><label data-translate=\"global.field.id\">ID</label><input type=\"text\" class=\"form-control\" name=\"id\" ng-model=\"vm.user.id\" readonly=\"readonly\"></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.login\">Login</label><input type=\"text\" class=\"form-control\" name=\"login\" ng-model=\"vm.user.login\" ng-required=\"vm.user.id == null\" ng-minlength=\"1\" ng-maxlength=\"50\" ng-pattern=\"/^[_\\'.@A-Za-z0-9-]*$/\"><div ng-show=\"editForm.login.$invalid\"><p class=\"help-block\" ng-show=\"editForm.login.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.login.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.firstName\">First Name</label><input type=\"text\" class=\"form-control\" name=\"firstName\" ng-model=\"vm.user.firstName\" ng-maxlength=\"50\"><div ng-show=\"editForm.firstName.$invalid\"><p class=\"help-block\" ng-show=\"editForm.firstName.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label data-translate=\"userManagement.lastName\">Last Name</label><input type=\"text\" class=\"form-control\" name=\"lastName\" ng-model=\"vm.user.lastName\" ng-maxlength=\"50\"><div ng-show=\"editForm.lastName.$invalid\"><p class=\"help-block\" ng-show=\"editForm.lastName.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"50\">This field cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" data-translate=\"userManagement.email\">Email</label><input type=\"email\" class=\"form-control\" name=\"email\" ng-model=\"vm.user.email\" required ng-maxlength=\"100\"><div ng-show=\"editForm.email.$invalid\"><p class=\"help-block\" ng-show=\"editForm.email.$error.required\" data-translate=\"entity.validation.required\">This field is required.</p><p class=\"help-block\" ng-show=\"editForm.email.$error.maxlength\" data-translate=\"entity.validation.maxlength\" translate-value-max=\"100\">This field cannot be longer than 100 characters.</p><p class=\"help-block\" ng-show=\"editForm.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p></div></div><div class=\"form-group\"><label for=\"activated\"><input ng-disabled=\"vm.user.id === null\" type=\"checkbox\" id=\"activated\" name=\"activated\" ng-model=\"vm.user.activated\"> <span data-translate=\"userManagement.activated\">Activated</span></label></div><div class=\"form-group\"><label data-translate=\"userManagement.langKey\">Lang Key</label><select class=\"form-control\" name=\"langKey\" ng-model=\"vm.user.langKey\" ng-options=\"language as language for language in vm.languages track by language\"></select></div><div class=\"form-group\"><label data-translate=\"userManagement.profiles\">Profiles</label><select class=\"form-control\" multiple=\"multiple\" name=\"authority\" ng-model=\"vm.user.authorities\" ng-options=\"authority for authority in vm.authorities\"></select></div></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" ng-click=\"vm.clear()\"><span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span data-translate=\"entity.action.cancel\">Cancel</span></button> <button type=\"submit\" ng-disabled=\"editForm.$invalid || vm.isSaving\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span data-translate=\"entity.action.save\">Save</span></button></div></form>');\n$templateCache.put('app/admin/user-management/user-management.html','<div><h2 data-translate=\"userManagement.home.title\">Users</h2><jhi-alert></jhi-alert><div class=\"row\"><div class=\"col-md-4\"><button class=\"btn btn-primary\" ui-sref=\"user-management.new\"><span class=\"glyphicon glyphicon-flash\"></span> <span data-translate=\"userManagement.home.createLabel\">Create a new User</span></button></div></div><div class=\"table-responsive\"><table class=\"jh-table table table-striped\"><thead><tr jh-sort=\"vm.predicate\" ascending=\"vm.reverse\" callback=\"vm.transition()\"><th jh-sort-by=\"id\"><span data-translate=\"global.field.id\">ID</span><span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"login\"><span data-translate=\"userManagement.login\">Login</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"email\"><span data-translate=\"userManagement.email\">Email</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th><th jh-sort-by=\"langKey\"><span data-translate=\"userManagement.langKey\">Lang Key</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th><span data-translate=\"userManagement.profiles\">Profiles</span></th><th jh-sort-by=\"createdDate\"><span data-translate=\"userManagement.createdDate\">Created Date</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"lastModifiedBy\"><span data-translate=\"userManagement.lastModifiedBy\">Last Modified By</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th jh-sort-by=\"lastModifiedDate\"><span data-translate=\"userManagement.lastModifiedDate\">Last Modified Date</span> <span class=\"glyphicon glyphicon-sort\"></span></th><th></th></tr></thead><tbody><tr ng-repeat=\"user in vm.users track by user.id\"><td><a ui-sref=\"user-management-detail({login:user.login})\">{{user.id}}</a></td><td>{{user.login}}</td><td>{{user.email}}</td><td><button class=\"btn btn-danger btn-xs\" ng-click=\"vm.setActive(user, true)\" ng-show=\"!user.activated\" data-translate=\"userManagement.deactivated\">Deactivated</button> <button class=\"btn btn-success btn-xs\" ng-click=\"vm.setActive(user, false)\" ng-show=\"user.activated\" ng-disabled=\"vm.currentAccount.login==user.login\" data-translate=\"userManagement.activated\">Activated</button></td><td>{{user.langKey}}</td><td><div ng-repeat=\"authority in user.authorities\"><span class=\"label label-info\">{{ authority }}</span></div></td><td>{{user.createdDate | date:\\'dd/MM/yy HH:mm\\'}}</td><td>{{user.lastModifiedBy}}</td><td>{{user.lastModifiedDate | date:\\'dd/MM/yy HH:mm\\'}}</td><td class=\"text-right\"><div class=\"btn-group flex-btn-group-container\"><button type=\"submit\" ui-sref=\"user-management-detail({login:user.login})\" class=\"btn btn-info btn-sm\"><span class=\"glyphicon glyphicon-eye-open\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.view\"></span></button> <button type=\"submit\" ui-sref=\"user-management.edit({login:user.login})\" class=\"btn btn-primary btn-sm\"><span class=\"glyphicon glyphicon-pencil\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.edit\"></span></button> <button type=\"submit\" ui-sref=\"user-management.delete({login:user.login})\" class=\"btn btn-danger btn-sm\" ng-disabled=\"vm.currentAccount.login==user.login\"><span class=\"glyphicon glyphicon-remove-circle\"></span> <span class=\"hidden-xs hidden-sm\" data-translate=\"entity.action.delete\"></span></button></div></td></tr></tbody></table></div><div class=\"text-center\"><jhi-item-count page=\"vm.page\" total=\"vm.queryCount\" items-per-page=\"vm.itemsPerPage\"></jhi-item-count><uib-pagination class=\"pagination-sm\" total-items=\"vm.totalItems\" ng-model=\"vm.page\" ng-change=\"vm.transition()\"></uib-pagination></div></div>');\n$templateCache.put('app/account/activate/activate.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"activate.title\">Activation</h1><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"activate.messages.success\" translate-compile><strong>Your user has been activated.</strong> Please <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>.</div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"activate.messages.error\"><strong>Your user could not be activated.</strong> Please use the registration form to sign up.</div></div></div></div>');\n$templateCache.put('app/account/password/password.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h2 data-translate=\"password.title\" translate-values=\"{username: \\'{{vm.account.login}}\\'}\">Password for [<b>{{vm.account.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"password.messages.success\"><strong>Password changed!</strong></div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"password.messages.error\"><strong>An error has occurred!</strong> The password could not be changed.</div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div><form name=\"form\" role=\"form\" novalidate ng-submit=\"vm.changePassword()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your confirmation password is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your confirmation password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your confirmation password cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"password.form.button\">Save</button></form></div></div></div>');\n$templateCache.put('app/account/register/register.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"register.title\">Registration</h1><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"register.messages.success\"><strong>Registration saved!</strong> Please check your email for confirmation.</div><div class=\"alert alert-danger\" ng-show=\"vm.error\" data-translate=\"register.messages.error.fail\"><strong>Registration failed!</strong> Please try again later.</div><div class=\"alert alert-danger\" ng-show=\"vm.errorUserExists\" data-translate=\"register.messages.error.userexists\"><strong>Login name already registered!</strong> Please choose another one.</div><div class=\"alert alert-danger\" ng-show=\"vm.errorEmailExists\" data-translate=\"register.messages.error.emailexists\"><strong>Email is already in use!</strong> Please choose another one.</div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div></div><div class=\"col-md-8 col-md-offset-2\"><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.register()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"login\" data-translate=\"global.form.username\">Username</label><input type=\"text\" class=\"form-control\" id=\"login\" name=\"login\" placeholder=\"{{\\'global.form.username.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.login\" ng-minlength=\"1\" ng-maxlength=\"50\" ng-pattern=\"/^[_\\'.@A-Za-z0-9-]*$/\" required><div ng-show=\"form.login.$dirty && form.login.$invalid\"><p class=\"help-block\" ng-show=\"form.login.$error.required\" data-translate=\"register.messages.validate.login.required\">Your username is required.</p><p class=\"help-block\" ng-show=\"form.login.$error.minlength\" data-translate=\"register.messages.validate.login.minlength\">Your username is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.login.$error.maxlength\" data-translate=\"register.messages.validate.login.maxlength\">Your username cannot be longer than 50 characters.</p><p class=\"help-block\" ng-show=\"form.login.$error.pattern\" data-translate=\"register.messages.validate.login.pattern\">Your username can only contain lower-case letters and digits.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your email is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your email is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your email cannot be longer than 100 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.registerAccount.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.registerAccount.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your confirmation password is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your confirmation password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your confirmation password cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"register.form.button\">Register</button></form><p></p><div class=\"alert alert-warning\" data-translate=\"global.messages.info.authenticated\" translate-compile>If you want to <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>, you can try the default accounts:<br>- Administrator (login=\"admin\" and password=\"admin\")<br>- User (login=\"user\" and password=\"user\").</div></div></div></div>');\n$templateCache.put('app/account/settings/settings.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h2 data-translate=\"settings.title\" translate-values=\"{username: \\'{{vm.settingsAccount.login}}\\'}\">User settings for [<b>{{vm.settingsAccount.login}}</b>]</h2><div class=\"alert alert-success\" ng-show=\"vm.success\" data-translate=\"settings.messages.success\"><strong>Settings saved!</strong></div><jhi-alert-error></jhi-alert-error><form name=\"form\" role=\"form\" novalidate ng-submit=\"vm.save()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"firstName\" data-translate=\"settings.form.firstname\">First Name</label><input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" placeholder=\"{{\\'settings.form.firstname.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.firstName\" ng-minlength=\"1\" ng-maxlength=\"50\" required maxlength=\"50\"><div ng-show=\"form.firstName.$dirty && form.firstName.$invalid\"><p class=\"help-block\" ng-show=\"form.firstName.$error.required\" data-translate=\"settings.messages.validate.firstname.required\">Your first name is required.</p><p class=\"help-block\" ng-show=\"form.firstName.$error.minlength\" data-translate=\"settings.messages.validate.firstname.minlength\">Your first name is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.firstName.$error.maxlength\" data-translate=\"settings.messages.validate.firstname.maxlength\">Your first name cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"lastName\" data-translate=\"settings.form.lastname\">Last Name</label><input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" placeholder=\"{{\\'settings.form.lastname.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.lastName\" ng-minlength=\"1\" ng-maxlength=\"50\" required maxlength=\"50\"><div ng-show=\"form.lastName.$dirty && form.lastName.$invalid\"><p class=\"help-block\" ng-show=\"form.lastName.$error.required\" data-translate=\"settings.messages.validate.lastname.required\">Your last name is required.</p><p class=\"help-block\" ng-show=\"form.lastName.$error.minlength\" data-translate=\"settings.messages.validate.lastname.minlength\">Your last name is required to be at least 1 character.</p><p class=\"help-block\" ng-show=\"form.lastName.$error.maxlength\" data-translate=\"settings.messages.validate.lastname.maxlength\">Your last name cannot be longer than 50 characters.</p></div></div><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.settingsAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required maxlength=\"100\"><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your email is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your email is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your email cannot be longer than 100 characters.</p></div></div><div class=\"form-group\"><label for=\"langKey\" data-translate=\"settings.form.language\">Language</label><select id=\"langKey\" name=\"langKey\" class=\"form-control\" ng-model=\"vm.settingsAccount.langKey\" ng-controller=\"JhiLanguageController as languageVm\" ng-options=\"code as (code | findLanguageFromKey) for code in languageVm.languages\"></select></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"settings.form.button\">Save</button></form></div></div></div>');\n$templateCache.put('app/components/login/login.html','<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" ng-click=\"vm.cancel()\">&times;</button><h4 class=\"modal-title\" data-translate=\"login.title\">Sign in</h4></div><div class=\"modal-body\"><div class=\"row\"><div class=\"col-md-4 col-md-offset-4\"><h1 data-translate=\"login.title\">Sign in</h1></div><div class=\"col-md-8 col-md-offset-2\"><div class=\"alert alert-danger\" ng-show=\"vm.authenticationError\" data-translate=\"login.messages.error.authentication\"><strong>Failed to sign in!</strong> Please check your credentials and try again.</div></div><div class=\"col-md-8 col-md-offset-2\"><form class=\"form\" role=\"form\" ng-submit=\"vm.login($event)\"><div class=\"form-group\"><label for=\"username\" data-translate=\"global.form.username\">Login</label><input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"{{\\'global.form.username.placeholder\\' | translate}}\" ng-model=\"vm.username\"></div><div class=\"form-group\"><label for=\"password\" data-translate=\"login.form.password\">Password</label><input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"{{\\'login.form.password.placeholder\\' | translate}}\" ng-model=\"vm.password\"></div><div class=\"form-group\"><label for=\"rememberMe\"><input type=\"checkbox\" id=\"rememberMe\" ng-model=\"vm.rememberMe\" checked=\"checked\"> <span data-translate=\"login.form.rememberme\">Remember me</span></label></div><button type=\"submit\" class=\"btn btn-primary\" data-translate=\"login.form.button\">Sign in</button></form><p></p><div class=\"alert alert-warning\"><a class=\"alert-link\" href=\"\" ng-click=\"vm.requestResetPassword()\" data-translate=\"login.password.forgot\">Did you forget your password?</a></div><div class=\"alert alert-warning\" data-translate=\"global.messages.info.register\" translate-compile>You don\\'t have an account yet? <a class=\"alert-link\" href=\"\" ng-click=\"vm.register()\">Register a new account</a></div></div></div></div>');\n$templateCache.put('app/layouts/navbar/navbar.html','<nav class=\"navbar navbar-default\" role=\"navigation\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" class=\"navbar-toggle\" ng-click=\"vm.toggleNavbar()\"><span class=\"sr-only\">Toggle navigation</span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span></button> <a class=\"navbar-brand logo\" href=\"#/\" ng-click=\"vm.collapseNavbar()\"><img class=\"logo-img\" src=\"content/images/logo-jhipster.png\" alt=\"logo\"> <span data-translate=\"global.title\">Coocotte</span> <span class=\"navbar-version\">v{{VERSION}}</span></a></div><div class=\"navbar-collapse\" uib-collapse=\"vm.isNavbarCollapsed\" ng-switch=\"vm.isAuthenticated()\"><ul class=\"nav navbar-nav navbar-right\"><li ui-sref-active=\"active\"><a ui-sref=\"home\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-home\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.home\">Home</span></a></li><!-- jhipster-needle-add-element-to-menu - JHipster will add new menu items here --><li ng-class=\"{active: vm.$state.includes(\\'entity\\')}\" ng-switch-when=\"true\" uib-dropdown class=\"dropdown pointer\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"entity-menu\"><span><span class=\"glyphicon glyphicon-th-list\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.entities.main\">Entities </span><b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><!-- jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here --></ul></li><li ng-class=\"{active: vm.$state.includes(\\'account\\')}\" uib-dropdown class=\"dropdown pointer\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"account-menu\"><span><span class=\"glyphicon glyphicon-user\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.account.main\">Account </span><b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a ui-sref=\"settings\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-wrench\"></span>&nbsp; <span data-translate=\"global.menu.account.settings\">Settings</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a ui-sref=\"password\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-lock\"></span>&nbsp; <span data-translate=\"global.menu.account.password\">Password</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"true\"><a href=\"\" ng-click=\"vm.logout()\" id=\"logout\"><span class=\"glyphicon glyphicon-log-out\"></span>&nbsp; <span data-translate=\"global.menu.account.logout\">Sign out</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"false\"><a href=\"\" ng-click=\"vm.login()\" id=\"login\"><span class=\"glyphicon glyphicon-log-in\"></span>&nbsp; <span data-translate=\"global.menu.account.login\">Sign in</span></a></li><li ui-sref-active=\"active\" ng-switch-when=\"false\"><a ui-sref=\"register\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-plus-sign\"></span>&nbsp; <span data-translate=\"global.menu.account.register\">Register</span></a></li></ul></li><li ng-class=\"{active: vm.$state.includes(\\'admin\\')}\" ng-switch-when=\"true\" has-authority=\"ROLE_ADMIN\" uib-dropdown class=\"dropdown pointer\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" id=\"admin-menu\"><span><span class=\"glyphicon glyphicon-tower\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.admin.main\">Administration</span> <b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu><li ui-sref-active=\"active\"><a ui-sref=\"user-management\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-user\"></span>&nbsp; <span data-translate=\"global.menu.admin.userManagement\">User management</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-metrics\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-dashboard\"></span>&nbsp; <span data-translate=\"global.menu.admin.metrics\">Metrics</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-health\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-heart\"></span>&nbsp; <span data-translate=\"global.menu.admin.health\">Health</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"jhi-configuration\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-list-alt\"></span>&nbsp; <span data-translate=\"global.menu.admin.configuration\">Configuration</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"audits\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-bell\"></span>&nbsp; <span data-translate=\"global.menu.admin.audits\">Audits</span></a></li><li ui-sref-active=\"active\"><a ui-sref=\"logs\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-tasks\"></span>&nbsp; <span data-translate=\"global.menu.admin.logs\">Logs</span></a></li><li ng-show=\"vm.swaggerEnabled\" ui-sref-active=\"active\"><a ui-sref=\"docs\" ng-click=\"vm.collapseNavbar()\"><span class=\"glyphicon glyphicon-book\"></span>&nbsp; <span data-translate=\"global.menu.admin.apidocs\">API</span></a></li><!-- jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here --></ul></li><li ui-sref-active=\"active\" uib-dropdown class=\"dropdown pointer\" ng-controller=\"JhiLanguageController as languageVm\"><a class=\"dropdown-toggle\" uib-dropdown-toggle href=\"\" ng-if=\"languageVm.languages.length > 1\"><span><span class=\"glyphicon glyphicon-flag\"></span> <span class=\"hidden-sm\" data-translate=\"global.menu.language\">Language</span> <b class=\"caret\"></b></span></a><ul class=\"dropdown-menu\" uib-dropdown-menu ng-if=\"languageVm.languages.length > 1\"><li active-menu=\"{{language}}\" ng-repeat=\"language in languageVm.languages\"><a href=\"\" ng-click=\"languageVm.changeLanguage(language);vm.collapseNavbar();\">{{language | findLanguageFromKey}}</a></li></ul></li></ul></div></div></nav>');\n$templateCache.put('app/layouts/error/accessdenied.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"error.title\">Error Page!</h1><div class=\"alert alert-danger\" data-translate=\"error.403\">You are not authorized to access the page.</div></div></div></div>');\n$templateCache.put('app/layouts/error/error.html','<div ng-cloak><div class=\"row\"><div class=\"col-md-4\"><span class=\"hipster img-responsive img-rounded\"></span></div><div class=\"col-md-8\"><h1 data-translate=\"error.title\">Error Page!</h1><div ng-show=\"errorMessage\"><div class=\"alert alert-danger\">{{errorMessage}}</div></div></div></div></div>');\n$templateCache.put('app/account/reset/finish/reset.finish.html','<div><div class=\"row\"><div class=\"col-md-4 col-md-offset-4\"><h1 data-translate=\"reset.finish.title\">Reset password</h1><div class=\"alert alert-danger\" data-translate=\"reset.finish.messages.keymissing\" ng-show=\"vm.keyMissing\"><strong>The password reset key is missing.</strong></div><div class=\"alert alert-warning\" ng-hide=\"vm.success || vm.keyMissing\"><p data-translate=\"reset.finish.messages.info\">Choose a new password</p></div><div class=\"alert alert-danger\" ng-show=\"vm.error\"><p data-translate=\"reset.finish.messages.error\">Your password couldn\\'t be reset. Remember a password request is only valid for 24 hours.</p></div><div class=\"alert alert-success\" ng-show=\"vm.success\"><p data-translate=\"reset.finish.messages.success\" translate-compile><strong>Your password has been reset.</strong> Please <a class=\"alert-link\" href=\"\" ng-click=\"vm.login()\">sign in</a>.</p></div><div class=\"alert alert-danger\" ng-show=\"vm.doNotMatch\" data-translate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div><div ng-hide=\"vm.keyMissing\"><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.finishReset()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"password\" data-translate=\"global.form.newpassword\">New password</label><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"{{\\'global.form.newpassword.placeholder\\' | translate}}\" ng-model=\"vm.resetAccount.password\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.password.$dirty && form.password.$invalid\"><p class=\"help-block\" ng-show=\"form.password.$error.required\" data-translate=\"global.messages.validate.newpassword.required\">Your password is required.</p><p class=\"help-block\" ng-show=\"form.password.$error.minlength\" data-translate=\"global.messages.validate.newpassword.minlength\">Your password is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.password.$error.maxlength\" data-translate=\"global.messages.validate.newpassword.maxlength\">Your password cannot be longer than 50 characters.</p></div><password-strength-bar password-to-check=\"vm.resetAccount.password\"></password-strength-bar></div><div class=\"form-group\"><label class=\"control-label\" for=\"confirmPassword\" data-translate=\"global.form.confirmpassword\">New password confirmation</label><input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"{{\\'global.form.confirmpassword.placeholder\\' | translate}}\" ng-model=\"vm.confirmPassword\" ng-minlength=\"4\" ng-maxlength=\"50\" required><div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.required\" data-translate=\"global.messages.validate.confirmpassword.required\">Your password confirmation is required.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.minlength\" data-translate=\"global.messages.validate.confirmpassword.minlength\">Your password confirmation is required to be at least 4 characters.</p><p class=\"help-block\" ng-show=\"form.confirmPassword.$error.maxlength\" data-translate=\"global.messages.validate.confirmpassword.maxlength\">Your password confirmation cannot be longer than 50 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"reset.finish.form.button\">Reset Password</button></form></div></div></div></div>');\n$templateCache.put('app/account/reset/request/reset.request.html','<div><div class=\"row\"><div class=\"col-md-8 col-md-offset-2\"><h1 data-translate=\"reset.request.title\">Reset your password</h1><div class=\"alert alert-danger\" data-translate=\"reset.request.messages.notfound\" ng-show=\"vm.errorEmailNotExists\"><strong>Email address isn\\'t registered!</strong> Please check and try again.</div><div class=\"alert alert-warning\" ng-hide=\"vm.success\"><p data-translate=\"reset.request.messages.info\">Enter the email address you used to register.</p></div><div class=\"alert alert-success\" ng-show=\"vm.success == \\'OK\\'\"><p data-translate=\"reset.request.messages.success\">Check your emails for details on how to reset your password.</p></div><form ng-show=\"!vm.success\" name=\"form\" role=\"form\" novalidate ng-submit=\"vm.requestReset()\" show-validation><div class=\"form-group\"><label class=\"control-label\" for=\"email\" data-translate=\"global.form.email\">Email</label><input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{\\'global.form.email.placeholder\\' | translate}}\" ng-model=\"vm.resetAccount.email\" ng-minlength=\"5\" ng-maxlength=\"100\" required><div ng-show=\"form.email.$dirty && form.email.$invalid\"><p class=\"help-block\" ng-show=\"form.email.$error.required\" data-translate=\"global.messages.validate.email.required\">Your email is required.</p><p class=\"help-block\" ng-show=\"form.email.$error.email\" data-translate=\"global.messages.validate.email.invalid\">Your email is invalid.</p><p class=\"help-block\" ng-show=\"form.email.$error.minlength\" data-translate=\"global.messages.validate.email.minlength\">Your email is required to be at least 5 characters.</p><p class=\"help-block\" ng-show=\"form.email.$error.maxlength\" data-translate=\"global.messages.validate.email.maxlength\">Your email cannot be longer than 100 characters.</p></div></div><button type=\"submit\" ng-disabled=\"form.$invalid\" class=\"btn btn-primary\" data-translate=\"reset.request.form.button\">Reset</button></form></div></div></div>');}]);})();"],"sourceRoot":"/source/"}